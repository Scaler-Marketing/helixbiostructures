{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,kB,I,GCAO,SAAS,EAAgB,CAAK,CAAE,CAAQ,EAE7C,EAAM,OAAO,CAAC,AAAA,IACZ,IAAM,EAAU,SAAS,aAAa,CAAC,QACvC,EAAQ,SAAS,CAAC,GAAG,CAAC,gBACtB,EAAK,UAAU,CAAC,YAAY,CAAC,EAAS,GACtC,EAAQ,WAAW,CAAC,EACtB,GAEwB,YAApB,OAAO,GACT,GAEJ,C,G,E,Q,S,C,C,C,E,E,E,O,C,gB,I,GCZO,SAAS,EAAc,CAAS,CAAE,CAAa,CAAE,CAAI,CAAE,CAAS,EACrE,GAAI,CAAC,EAAW,CACd,QAAQ,KAAK,CAAC,uBACd,MACF,CAGA,IAAM,EAAiB,EAAU,WAAW,CACtC,EAAkB,EAAU,YAAY,CAExC,EAAoB,OAAO,UAAU,EAAI,IAAO,EAAgB,EAAK,EAGrE,EAAa,SAAS,EAAiB,GAGvC,EAAmB,KAAK,IAAI,CAAC,EAAkB,GAG/C,EAAS,QAAU,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAG,GAE9D,GAAK,EAmCE,CAEL,IAAI,EAAa,CAAC;kCACY,EAAE,EAAe,CAAC,EAAE,EAAgB;4BAC1C,EAAE,MAAM,IAAI,CAAC,CAAE,OAAQ,CAAiB,GACrC,GAAG,CAAC,CAAC,EAAG,IACP,MAAM,IAAI,CAAC,CAAE,OAAQ,CAAc,GAChC,GAAG,CAAC,CAAC,EAAG,IAGA,CAAC,SAAS,EAFP,EAAM,EAEK,KAAK,EADhB,EAAM,EACc,SAAS,EACrC,EAAa,EACd,UAAU,EAAE,EAAa,EAAE,QAAQ,EAClC,GAAc,UACf,GAAG,CAAC,EAEN,IAAI,CA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","sources":["<anon>","src/modules/setLinesWrapper.js","src/modules/createSVGGrid.js","src/home.js","src/home/homeIntroText.js","src/home/services.js","src/home/newsSlider.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5744\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5744\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2rxJM\", function(module, exports) {\n\n$parcel$export(module.exports, \"setLinesWrapper\", () => $1c7845f0e1de0887$export$8f060496e19d4bbb);\nfunction $1c7845f0e1de0887$export$8f060496e19d4bbb(lines, callback) {\n    // Wrap each line in a .line-wrapper span\n    lines.forEach((line)=>{\n        const wrapper = document.createElement(\"span\");\n        wrapper.classList.add(\"line-wrapper\");\n        line.parentNode.insertBefore(wrapper, line);\n        wrapper.appendChild(line);\n    });\n    if (typeof callback === \"function\") callback();\n}\n\n});\n\nparcelRegister(\"cljH0\", function(module, exports) {\n\n$parcel$export(module.exports, \"createSVGGrid\", () => $8fc6b8bbd146cdca$export$d47c320381fa2abf);\nfunction $8fc6b8bbd146cdca$export$d47c320381fa2abf(container, squaresPerRow, fill, onlyEmbed) {\n    if (!container) {\n        console.error(\"Container not found\");\n        return;\n    }\n    // Get the container's dimensions\n    const containerWidth = container.clientWidth;\n    const containerHeight = container.clientHeight;\n    const responsiveSquares = window.innerWidth <= 991 ? squaresPerRow / 2 : squaresPerRow;\n    // Calculate the size of each square\n    const squareSize = parseInt(containerWidth / responsiveSquares);\n    // Calculate the number of squares per column\n    const squaresPerColumn = Math.ceil(containerHeight / squareSize);\n    // Create a unique ID for the mask\n    const maskId = \"mask-\" + Math.random().toString(36).substr(2, 9);\n    if (!onlyEmbed) {\n        // Create SVG content\n        let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                    <defs>\n                        <mask id=\"${maskId}\">\n                            ${Array.from({\n            length: squaresPerColumn\n        }).map((_, row)=>Array.from({\n                length: responsiveSquares\n            }).map((_, col)=>{\n                const x = col * squareSize;\n                const y = row * squareSize;\n                return `<rect x=\"${x}\" y=\"${y}\" width=\"${squareSize + 1}\" height=\"${squareSize + 1}\" fill=\"${fill ? fill : \"#000000\"}\"/>`;\n            }).join(\"\")).join(\"\")}\n                        </mask>\n                    </defs>\n                </svg>`;\n        // Create wrapper for the SVG and mask\n        const maskContainer = document.createElement(\"div\");\n        maskContainer.className = \"mask-container\";\n        maskContainer.style.maskImage = `url(#${maskId})`;\n        // Append SVG to maskContainer\n        maskContainer.innerHTML = svgContent;\n        container.parentNode.insertBefore(maskContainer, container);\n        maskContainer.appendChild(container);\n        return maskContainer.querySelector(\"svg\");\n    } else {\n        // Create SVG content\n        let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                            ${Array.from({\n            length: squaresPerColumn\n        }).map((_, row)=>Array.from({\n                length: squaresPerRow\n            }).map((_, col)=>{\n                const x = col * squareSize;\n                const y = row * squareSize;\n                return `<rect x=\"${x}\" y=\"${y}\" width=\"${squareSize + 1}\" height=\"${squareSize + 1}\" fill=\"${fill ? fill : \"#000000\"}\"/>`;\n            }).join(\"\")).join(\"\")}\n                </svg>`;\n        container.insertAdjacentHTML(\"beforeend\", svgContent);\n        return svgContent;\n    }\n}\n\n});\n\n\nvar $2rxJM = parcelRequire(\"2rxJM\");\n\nvar $cljH0 = parcelRequire(\"cljH0\");\n// Link timelines to scroll position\nfunction $c2ee0746a8bca6f4$var$createHomeIntroText(triggerElement, words, index, amount) {\n    const isFirst = index === 0;\n    const isLast = index === amount - 1;\n    if (isFirst) gsap.fromTo(triggerElement.querySelector(\".section-sticky\"), {\n        opacity: 1\n    }, {\n        opacity: 0,\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: \"80% bottom\",\n            end: \"bottom bottom\",\n            // markers: true,\n            pin: false\n        }\n    });\n    if (!isLast && !isFirst) {\n        gsap.fromTo(words, {\n            yPercent: 100\n        }, {\n            yPercent: 0,\n            stagger: 0.1,\n            scrollTrigger: {\n                trigger: triggerElement,\n                scrub: true,\n                start: \"top top\",\n                end: \"30% top\",\n                // markers: true,\n                pin: false\n            }\n        });\n        gsap.fromTo(words, {\n            yPercent: 0\n        }, {\n            yPercent: -100,\n            stagger: 0.1,\n            immediateRender: false,\n            scrollTrigger: {\n                trigger: triggerElement,\n                scrub: true,\n                start: \"80% bottom\",\n                end: \"bottom bottom\",\n                // markers: true,\n                pin: false\n            }\n        });\n    }\n    if (isLast) {\n        const lines = triggerElement.querySelectorAll(\".intro-text\");\n        const tl = gsap.timeline({\n            paused: true\n        });\n        lines.forEach((line, i)=>{\n            if (i === lines.length - 1) {\n                gsap.set(line.querySelectorAll(\".line\"), {\n                    yPercent: 0\n                });\n                tl.fromTo(line, {\n                    height: 0\n                }, {\n                    height: \"auto\",\n                    duration: 1,\n                    delay: 2,\n                    ease: \"none\"\n                });\n            } else tl.fromTo(line.querySelectorAll(\".line\"), {\n                yPercent: 100\n            }, {\n                yPercent: 0,\n                duration: 1,\n                ease: \"none\"\n            });\n        });\n        tl.fromTo(triggerElement.querySelector(\".button\"), {\n            yPercent: 105\n        }, {\n            yPercent: 0,\n            duration: 1\n        });\n        gsap.fromTo(tl, {\n            progress: 0\n        }, {\n            progress: 1,\n            scrollTrigger: {\n                trigger: triggerElement,\n                scrub: true,\n                start: \"top top\",\n                end: \"30% top\",\n                // markers: true,\n                pin: false\n            }\n        });\n        // logic for fade out on scrub video\n        const canvasSquares = document.querySelectorAll(\".section.home-hero .mask-container svg rect\");\n        gsap.set(canvasSquares, {\n            opacity: 1\n        });\n        gsap.fromTo(canvasSquares, {\n            opacity: 1\n        }, {\n            opacity: 0,\n            stagger: {\n                each: 0.005,\n                from: \"random\"\n            },\n            scrollTrigger: {\n                trigger: triggerElement,\n                scrub: true,\n                start: \"bottom bottom\",\n                end: \"bottom center\",\n                // markers: true,\n                pin: false\n            }\n        });\n    }\n}\nfunction $c2ee0746a8bca6f4$export$a447da1e9ff61e55() {\n    // Split all words on the brand core section\n    const homeIntroText = new SplitType(\".intro-text\", {\n        types: \"lines\",\n        tagName: \"span\"\n    });\n    (0, $2rxJM.setLinesWrapper)(homeIntroText.lines, ()=>{\n        gsap.set(\".intro-text .line\", {\n            yPercent: 100\n        });\n    });\n    const sections = document.querySelectorAll(\".intro-sequence .sticky-wrapper\");\n    // set logic for fade out on scrub video\n    (0, $cljH0.createSVGGrid)(document.querySelector(\".section.home-hero canvas\"), 20);\n    document.querySelector(\".section.home-hero .bg-canvas-el\").classList.add(\"init\");\n    sections.forEach((section, i)=>{\n        const words = section.querySelectorAll(\".line\");\n        $c2ee0746a8bca6f4$var$createHomeIntroText(section, words, i, sections.length);\n    });\n}\n\n\n\nvar $cljH0 = parcelRequire(\"cljH0\");\n\nvar $2rxJM = parcelRequire(\"2rxJM\");\nfunction $590857349261d23b$export$d4d6102d3f698f0() {\n    const wrapper = document.querySelector(\".section.list-scroll\"), sections = wrapper.querySelectorAll(\".sticky-wrapper\");\n    if (!sections) return;\n    sections.forEach((section, i)=>{\n        const id = section.querySelector(\".section-anchor\").id, title = section.querySelector(\"h2\"), description = section.querySelector(\"p\"), button = section.querySelector(\".button\"), videoBg = wrapper.querySelector(`.section-scroll-video-bg[data-section-id=\"${id}\"] video`), anchorLink = wrapper.querySelector(`.section-nav-item[data-target=\"${id}\"]`);\n        let descriptionLines;\n        const maskEl = (0, $cljH0.createSVGGrid)(title, 10);\n        const maskVideo = (0, $cljH0.createSVGGrid)(videoBg, 10);\n        // Split all words on the brand core section\n        const descriptionEls = new SplitType(description, {\n            types: \"lines\",\n            tagName: \"span\"\n        });\n        (0, $2rxJM.setLinesWrapper)(descriptionEls.lines, ()=>{\n            descriptionLines = description.querySelectorAll(\".line\");\n        });\n        let scrollTimeout;\n        $590857349261d23b$var$setListSectionScroll(section, i === 0, i === sections.length - 1, maskEl, maskVideo, descriptionLines, button, anchorLink, scrollTimeout);\n    });\n}\nfunction $590857349261d23b$var$setListSectionScroll(trigger, isFirst, isLast, titleMaskEl, maskVideo, descriptionLines, button, anchorLink, scrollTimeout) {\n    const squaresTitle = titleMaskEl.querySelectorAll(\"rect\");\n    const squaresTitleTiming = squaresTitle.length * 0.01;\n    const squaresVideo = maskVideo.querySelectorAll(\"rect\");\n    const squaresVideoTiming = squaresVideo.length * 0.005;\n    if (!isFirst) {\n        gsap.set(squaresTitle, {\n            opacity: 0\n        });\n        gsap.set(squaresVideo, {\n            opacity: 0\n        });\n        gsap.set(descriptionLines, {\n            yPercent: 100\n        });\n        gsap.set(button, {\n            yPercent: 105\n        });\n    } else {\n        anchorLink.classList.add(\"active\");\n        gsap.set(squaresTitle, {\n            opacity: 1\n        });\n        gsap.set(squaresVideo, {\n            opacity: 1\n        });\n    }\n    const tlIn = gsap.timeline({\n        paused: true\n    });\n    const tlOut = gsap.timeline({\n        paused: true\n    });\n    if (!isFirst) tlIn.to(squaresTitle, {\n        opacity: 1,\n        duration: 0.01,\n        overwrite: \"auto\",\n        stagger: {\n            from: \"random\",\n            each: 0.01\n        },\n        ease: \"bounce.out\"\n    }, 0).to(descriptionLines, {\n        yPercent: 0,\n        stagger: 0.02,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"power4.inOut\"\n    }, // `-=${squaresVideoTiming}`\n    0).to(button, {\n        yPercent: 0,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"power4.inOut\"\n    }, // \"-=0.5\"\n    0);\n    tlOut.to(squaresTitle, {\n        opacity: 0,\n        duration: 0.01,\n        overwrite: \"auto\",\n        stagger: {\n            from: \"random\",\n            each: 0.01\n        },\n        ease: \"bounce.out\"\n    })// .to(\n    //   squaresVideo,\n    //   {\n    //     fill: \"#000\",\n    //     duration: 0.005,\n    //     stagger: {\n    //       from: \"random\",\n    //       each: 0.005,\n    //     },\n    //     ease: \"bounce.out\",\n    //   },\n    //   0\n    // )\n    .to(descriptionLines, {\n        yPercent: -100,\n        stagger: 0.02,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"power4.inOut\"\n    }, // `-=${squaresVideoTiming}`\n    0).to(button, {\n        yPercent: -105,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"power4.inOut\"\n    }, // \"-=0.5\"\n    0);\n    let start, end;\n    if (isFirst) {\n        start = \"top top\";\n        end = \"50% top\";\n    } else if (isLast) {\n        start = \"50% top\";\n        end = \"bottom bottom\";\n    } else {\n        start = \"33.33% top\";\n        end = \"66.66% top\";\n    }\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: trigger,\n            start: start,\n            end: end,\n            // markers: true,\n            scrub: true,\n            pin: false,\n            onEnter: ()=>{\n                if (!isFirst) {\n                    clearTimeout(scrollTimeout);\n                    scrollTimeout = setTimeout(()=>{\n                        console.log(\"onEnter\", anchorLink);\n                        gsap.to(squaresVideo, {\n                            opacity: 1,\n                            duration: 0.005,\n                            overwrite: \"auto\",\n                            stagger: {\n                                from: \"random\",\n                                each: 0.005\n                            },\n                            ease: \"bounce.out\",\n                            immediateRender: true\n                        });\n                        tlIn.play();\n                        anchorLink.classList.add(\"active\");\n                    }, 200); // Wait 0.5 seconds\n                }\n            },\n            onEnterBack: ()=>{\n                clearTimeout(scrollTimeout);\n                scrollTimeout = setTimeout(()=>{\n                    console.log(\"onEnterBack\", anchorLink);\n                    tlOut.reverse();\n                    gsap.to(squaresVideo, {\n                        opacity: 1,\n                        duration: 0.005,\n                        overwrite: \"auto\",\n                        stagger: {\n                            from: \"random\",\n                            each: 0.005\n                        },\n                        ease: \"bounce.out\",\n                        immediateRender: true\n                    });\n                    anchorLink.classList.add(\"active\");\n                }, 200); // Wait 0.5 seconds\n            },\n            onLeave: ()=>{\n                if (!isLast) {\n                    clearTimeout(scrollTimeout);\n                    scrollTimeout = setTimeout(()=>{\n                        console.log(\"OnLeave\", anchorLink);\n                        tlOut.play();\n                        gsap.to(squaresVideo, {\n                            opacity: 0,\n                            duration: 0.005,\n                            overwrite: \"auto\",\n                            stagger: {\n                                from: \"random\",\n                                each: 0.005\n                            },\n                            ease: \"bounce.out\",\n                            immediateRender: true\n                        });\n                        anchorLink.classList.remove(\"active\");\n                    }, 200); // Wait 0.5 seconds\n                }\n            },\n            onLeaveBack: ()=>{\n                if (!isFirst) {\n                    clearTimeout(scrollTimeout);\n                    scrollTimeout = setTimeout(()=>{\n                        console.log(\"OnLeaveBack\", anchorLink);\n                        tlIn.reverse();\n                        gsap.to(squaresVideo, {\n                            opacity: 0,\n                            duration: 0.005,\n                            overwrite: \"auto\",\n                            stagger: {\n                                from: \"random\",\n                                each: 0.005\n                            },\n                            ease: \"bounce.out\",\n                            immediateRender: true\n                        });\n                        anchorLink.classList.remove(\"active\");\n                    }, 200); // Wait 0.5 seconds\n                }\n            }\n        }\n    });\n}\n\n\nfunction $ca14fce580ff58e8$export$7245151ef7522291() {\n    if (!document.querySelector(\".news-slider\")) return;\n    const sliders = document.querySelectorAll(\".news-slider\");\n    sliders.forEach((s)=>{\n        const slider = new Swiper(s, {\n            slidesPerView: \"auto\",\n            navigation: {\n                nextEl: \".slider-controls .button.next\",\n                prevEl: \".slider-controls .button.prev\"\n            }\n        });\n        // gsap logic\n        const slides = s.querySelectorAll(\".news-item\");\n        gsap.set(slides, {\n            y: \"3rem\",\n            opacity: 0\n        });\n        gsap.timeline({\n            scrollTrigger: {\n                trigger: s,\n                start: \"25% bottom\",\n                onEnter: ()=>{\n                    gsap.to(slides, {\n                        y: \"0rem\",\n                        opacity: 1,\n                        stagger: 0.1,\n                        duration: 0.5,\n                        ease: \"expo.out\"\n                    });\n                }\n            }\n        });\n    // slides.forEach((slide) => {\n    //   const c01 = slide.querySelector('.news-item-thumb-img._02');\n    //   const c02 = slide.querySelector('.news-item-thumb-img._03');\n    //   const tl = gsap.timeline({ paused: true });\n    //   tl.to(c01, {\n    //     scale: .8,\n    //     duration: .3,\n    //     ease: \"expo.inOut\"\n    //   }).to(c02, {\n    //     scale: .6,\n    //     duration: .3,\n    //     ease: \"expo.inOut\"\n    //   }, \"-=0.3\");\n    //   slide.addEventListener('mouseover', () => { tl.play(); })\n    //   slide.addEventListener('mouseout', () => { tl.reverse(); })\n    // });\n    });\n}\n\n\ndocument.fonts.ready.then(()=>{\n    (0, $c2ee0746a8bca6f4$export$a447da1e9ff61e55)();\n    (0, $590857349261d23b$export$d4d6102d3f698f0)();\n});\n(0, $ca14fce580ff58e8$export$7245151ef7522291)();\n\n})();\n//# sourceMappingURL=home.js.map\n","export function setLinesWrapper(lines, callback) {\n  // Wrap each line in a .line-wrapper span\n  lines.forEach(line => {\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('line-wrapper');\n    line.parentNode.insertBefore(wrapper, line);\n    wrapper.appendChild(line);\n  });\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n}","export function createSVGGrid(container, squaresPerRow, fill, onlyEmbed) {\n  if (!container) {\n    console.error(\"Container not found\");\n    return;\n  }\n\n  // Get the container's dimensions\n  const containerWidth = container.clientWidth;\n  const containerHeight = container.clientHeight;\n\n  const responsiveSquares = window.innerWidth <= 991 ? (squaresPerRow / 2) : squaresPerRow;\n\n  // Calculate the size of each square\n  const squareSize = parseInt(containerWidth / responsiveSquares);\n\n  // Calculate the number of squares per column\n  const squaresPerColumn = Math.ceil(containerHeight / squareSize);\n\n  // Create a unique ID for the mask\n  const maskId = \"mask-\" + Math.random().toString(36).substr(2, 9);\n\n  if (!onlyEmbed) {\n    // Create SVG content\n    let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                    <defs>\n                        <mask id=\"${maskId}\">\n                            ${Array.from({ length: squaresPerColumn })\n                              .map((_, row) =>\n                                Array.from({ length: responsiveSquares })\n                                  .map((_, col) => {\n                                    const x = col * squareSize;\n                                    const y = row * squareSize;\n                                    return `<rect x=\"${x}\" y=\"${y}\" width=\"${\n                                      squareSize + 1\n                                    }\" height=\"${squareSize + 1}\" fill=\"${\n                                      fill ? fill : \"#000000\"\n                                    }\"/>`;\n                                  })\n                                  .join(\"\")\n                              )\n                              .join(\"\")}\n                        </mask>\n                    </defs>\n                </svg>`;\n    // Create wrapper for the SVG and mask\n    const maskContainer = document.createElement(\"div\");\n    maskContainer.className = \"mask-container\";\n    maskContainer.style.maskImage = `url(#${maskId})`;\n\n    // Append SVG to maskContainer\n    maskContainer.innerHTML = svgContent;\n    container.parentNode.insertBefore(maskContainer, container);\n    maskContainer.appendChild(container);\n\n    return maskContainer.querySelector(\"svg\");\n  } else {\n    // Create SVG content\n    let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                            ${Array.from({ length: squaresPerColumn })\n                              .map((_, row) =>\n                                Array.from({ length: squaresPerRow })\n                                  .map((_, col) => {\n                                    const x = col * squareSize;\n                                    const y = row * squareSize;\n                                    return `<rect x=\"${x}\" y=\"${y}\" width=\"${\n                                      squareSize + 1\n                                    }\" height=\"${squareSize + 1}\" fill=\"${\n                                      fill ? fill : \"#000000\"\n                                    }\"/>`;\n                                  })\n                                  .join(\"\")\n                              )\n                              .join(\"\")}\n                </svg>`;\n    container.insertAdjacentHTML(\"beforeend\", svgContent);\n\n    return svgContent;\n  }\n}\n","import { setHomeIntroText } from \"./home/homeIntroText\";\nimport { initSectionScroll } from \"./home/services\";\nimport { initNewsSlider } from \"./home/newsSlider\";\n\ndocument.fonts.ready.then(() => {\n  setHomeIntroText();\n  initSectionScroll();\n});\ninitNewsSlider();","import { setLinesWrapper } from \"../modules/setLinesWrapper\";\nimport { createSVGGrid } from \"../modules/createSVGGrid\";\n\n// Link timelines to scroll position\nfunction createHomeIntroText(triggerElement, words, index, amount) {\n  const isFirst = index === 0;\n  const isLast = index === amount - 1;\n\n  if (isFirst) {\n    gsap.fromTo(\n      triggerElement.querySelector(\".section-sticky\"),\n      {\n        opacity: 1,\n      },\n      {\n        opacity: 0,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"80% bottom\",\n          end: \"bottom bottom\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n  }\n\n  if (!isLast && !isFirst) {\n    gsap.fromTo(\n      words,\n      {\n        yPercent: 100,\n      },\n      {\n        yPercent: 0,\n        stagger: 0.1,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"top top\",\n          end: \"30% top\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n    gsap.fromTo(\n      words,\n      {\n        yPercent: 0,\n      },\n      {\n        yPercent: -100,\n        stagger: 0.1,\n        immediateRender: false,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"80% bottom\",\n          end: \"bottom bottom\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n  }\n\n  if (isLast) {\n    const lines = triggerElement.querySelectorAll(\".intro-text\");\n    const tl = gsap.timeline({ paused: true });\n    lines.forEach((line, i) => {\n      if (i === lines.length - 1) {\n        gsap.set(line.querySelectorAll(\".line\"), { yPercent: 0 });\n        tl.fromTo(\n          line,\n          {\n            height: 0,\n          },\n          {\n            height: \"auto\",\n            duration: 1,\n            delay: 2,\n            ease: \"none\",\n          }\n        );\n      } else {\n        tl.fromTo(\n          line.querySelectorAll(\".line\"),\n          {\n            yPercent: 100,\n          },\n          {\n            yPercent: 0,\n            duration: 1,\n            ease: \"none\",\n          }\n        );\n      }\n    });\n\n    tl.fromTo(\n      triggerElement.querySelector(\".button\"),\n      {\n        yPercent: 105,\n      },\n      {\n        yPercent: 0,\n        duration: 1,\n      }\n    );\n\n    gsap.fromTo(\n      tl,\n      {\n        progress: 0,\n      },\n      {\n        progress: 1,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"top top\",\n          end: \"30% top\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n\n    // logic for fade out on scrub video\n    const canvasSquares = document.querySelectorAll(\n      \".section.home-hero .mask-container svg rect\"\n    );\n    gsap.set(canvasSquares, { opacity: 1 });\n\n    gsap.fromTo(\n      canvasSquares,\n      {\n        opacity: 1,\n      },\n      {\n        opacity: 0,\n        stagger: {\n          each: 0.005,\n          from: \"random\",\n        },\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"bottom bottom\",\n          end: \"bottom center\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n  }\n}\n\nexport function setHomeIntroText() {\n  // Split all words on the brand core section\n  const homeIntroText = new SplitType(\".intro-text\", {\n    types: \"lines\",\n    tagName: \"span\",\n  });\n\n  setLinesWrapper(homeIntroText.lines, () => {\n    gsap.set(\".intro-text .line\", { yPercent: 100 });\n  });\n\n  const sections = document.querySelectorAll(\".intro-sequence .sticky-wrapper\");\n\n  // set logic for fade out on scrub video\n  createSVGGrid(document.querySelector(\".section.home-hero canvas\"), 20);\n\n  document.querySelector('.section.home-hero .bg-canvas-el').classList.add('init');\n\n  sections.forEach((section, i) => {\n    const words = section.querySelectorAll(\".line\");\n    createHomeIntroText(section, words, i, sections.length);\n  });\n}\n","import { createSVGGrid } from \"../modules/createSVGGrid\";\nimport { setLinesWrapper } from \"../modules/setLinesWrapper\";\n\nexport function initSectionScroll() {\n  const wrapper = document.querySelector(\".section.list-scroll\"),\n    sections = wrapper.querySelectorAll(\".sticky-wrapper\");\n\n  if (!sections) {\n    return;\n  }\n\n  sections.forEach((section, i) => {\n    const id = section.querySelector('.section-anchor').id,\n      title = section.querySelector(\"h2\"),\n      description = section.querySelector(\"p\"),\n      button = section.querySelector(\".button\"),\n      videoBg = wrapper.querySelector(`.section-scroll-video-bg[data-section-id=\"${id}\"] video`),\n      anchorLink = wrapper.querySelector(\n        `.section-nav-item[data-target=\"${id}\"]`\n      );\n\n    let descriptionLines;\n\n    const maskEl = createSVGGrid(title, 10);\n    const maskVideo = createSVGGrid(videoBg, 10);\n    // Split all words on the brand core section\n    const descriptionEls = new SplitType(description, {\n      types: \"lines\",\n      tagName: \"span\",\n    });\n\n    setLinesWrapper(descriptionEls.lines, () => {\n      descriptionLines = description.querySelectorAll(\".line\");\n    });\n\n    let scrollTimeout;\n\n    setListSectionScroll(\n      section,\n      i === 0,\n      i === sections.length - 1,\n      maskEl,\n      maskVideo,\n      descriptionLines,\n      button,\n      anchorLink,\n      scrollTimeout\n    );\n  });\n}\n\nfunction setListSectionScroll(\n  trigger,\n  isFirst,\n  isLast,\n  titleMaskEl,\n  maskVideo,\n  descriptionLines,\n  button,\n  anchorLink,\n  scrollTimeout\n) {\n  const squaresTitle = titleMaskEl.querySelectorAll(\"rect\");\n  const squaresTitleTiming = squaresTitle.length * 0.01;\n  const squaresVideo = maskVideo.querySelectorAll(\"rect\");\n  const squaresVideoTiming = squaresVideo.length * 0.005;\n\n  if (!isFirst) {\n    gsap.set(squaresTitle, { opacity: 0 });\n    gsap.set(squaresVideo, { opacity: 0 });\n    gsap.set(descriptionLines, { yPercent: 100 });\n    gsap.set(button, { yPercent: 105 });\n  } else {\n    anchorLink.classList.add(\"active\");\n    gsap.set(squaresTitle, { opacity: 1 });\n    gsap.set(squaresVideo, { opacity: 1 });\n  }\n  const tlIn = gsap.timeline({ paused: true });\n  const tlOut = gsap.timeline({ paused: true });\n\n  if (!isFirst) {\n    tlIn\n      .to(\n        squaresTitle,\n        {\n          opacity: 1,\n          duration: 0.01,\n          overwrite: \"auto\",\n          stagger: {\n            from: \"random\",\n            each: 0.01,\n          },\n          ease: \"bounce.out\",\n        },\n        0\n      )\n      .to(\n        descriptionLines,\n        {\n          yPercent: 0,\n          stagger: 0.02,\n          duration: 0.5,\n          overwrite: \"auto\",\n          ease: \"power4.inOut\",\n        },\n        // `-=${squaresVideoTiming}`\n        0\n      )\n      .to(\n        button,\n        {\n          yPercent: 0,\n          duration: 0.5,\n          overwrite: \"auto\",\n          ease: \"power4.inOut\",\n        },\n        // \"-=0.5\"\n        0\n      );\n  }\n\n  tlOut\n    .to(squaresTitle, {\n      opacity: 0,\n      duration: 0.01,\n      overwrite: \"auto\",\n      stagger: {\n        from: \"random\",\n        each: 0.01,\n      },\n      ease: \"bounce.out\",\n    })\n    // .to(\n    //   squaresVideo,\n    //   {\n    //     fill: \"#000\",\n    //     duration: 0.005,\n    //     stagger: {\n    //       from: \"random\",\n    //       each: 0.005,\n    //     },\n    //     ease: \"bounce.out\",\n    //   },\n    //   0\n    // )\n    .to(\n      descriptionLines,\n      {\n        yPercent: -100,\n        stagger: 0.02,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"power4.inOut\",\n      },\n      // `-=${squaresVideoTiming}`\n      0\n    )\n    .to(\n      button,\n      {\n        yPercent: -105,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"power4.inOut\",\n      },\n      // \"-=0.5\"\n      0\n    );\n\n  let start, end;\n\n  if (isFirst) {\n    start = \"top top\";\n    end = \"50% top\";\n  } else if (isLast) {\n    start = \"50% top\";\n    end = \"bottom bottom\";\n  } else {\n    start = \"33.33% top\";\n    end = \"66.66% top\";\n  }\n\n  gsap.timeline({\n    scrollTrigger: {\n      trigger,\n      start,\n      end,\n      // markers: true,\n      scrub: true,\n      pin: false,\n      onEnter: () => {\n        if (!isFirst) {\n          clearTimeout(scrollTimeout);\n          scrollTimeout = setTimeout(() => {\n            console.log(\"onEnter\", anchorLink);\n            gsap.to(squaresVideo, {\n              opacity: 1,\n              duration: 0.005,\n              overwrite: \"auto\",\n              stagger: {\n                from: \"random\",\n                each: 0.005,\n              },\n              ease: \"bounce.out\",\n              immediateRender: true,\n            });\n            tlIn.play();\n            anchorLink.classList.add(\"active\");\n          }, 200); // Wait 0.5 seconds\n        }\n      },\n      onEnterBack: () => {\n        clearTimeout(scrollTimeout);\n        scrollTimeout = setTimeout(() => {\n          console.log('onEnterBack', anchorLink)\n          tlOut.reverse();\n          gsap.to(squaresVideo, {\n            opacity: 1,\n            duration: 0.005,\n            overwrite: \"auto\",\n            stagger: {\n              from: \"random\",\n              each: 0.005,\n            },\n            ease: \"bounce.out\",\n            immediateRender: true,\n          });\n          anchorLink.classList.add(\"active\");\n        }, 200); // Wait 0.5 seconds\n      },\n      onLeave: () => {\n        if (!isLast) {\n          clearTimeout(scrollTimeout);\n          scrollTimeout = setTimeout(() => {\n            console.log(\"OnLeave\", anchorLink);\n            tlOut.play();\n            gsap.to(squaresVideo, {\n              opacity: 0,\n              duration: 0.005,\n              overwrite: \"auto\",\n              stagger: {\n                from: \"random\",\n                each: 0.005,\n              },\n              ease: \"bounce.out\",\n              immediateRender: true,\n            });\n          anchorLink.classList.remove(\"active\");\n          }, 200); // Wait 0.5 seconds\n        }\n      },\n      onLeaveBack: () => {\n        if (!isFirst) {\n          clearTimeout(scrollTimeout);\n          scrollTimeout = setTimeout(() => {\n            console.log(\"OnLeaveBack\", anchorLink);\n            tlIn.reverse();\n            gsap.to(squaresVideo, {\n              opacity: 0,\n              duration: 0.005,\n              overwrite: \"auto\",\n              stagger: {\n                from: \"random\",\n                each: 0.005,\n              },\n              ease: \"bounce.out\",\n              immediateRender: true,\n            });\n            anchorLink.classList.remove(\"active\");\n          }, 200); // Wait 0.5 seconds\n        }\n      },\n    },\n  });\n}\n","export function initNewsSlider() {\n  if (!document.querySelector(\".news-slider\")) {\n    return;\n  }\n\n  const sliders = document.querySelectorAll(\".news-slider\");\n\n  sliders.forEach((s) => {\n    const slider = new Swiper(s, {\n      slidesPerView: \"auto\",\n      navigation: {\n        nextEl: \".slider-controls .button.next\",\n        prevEl: \".slider-controls .button.prev\",\n      },\n      // spaceBetween: 30,\n    });\n\n    // gsap logic\n    const slides = s.querySelectorAll(\".news-item\");\n    gsap.set(slides, {\n      y: \"3rem\",\n      opacity: 0,\n    });\n\n    gsap.timeline({\n      scrollTrigger: {\n        trigger: s,\n        start: \"25% bottom\",\n        onEnter: () => {\n          gsap.to(\n            slides,\n            {\n              y: \"0rem\",\n              opacity: 1,\n              stagger: 0.1,\n              duration: 0.5,\n              ease: \"expo.out\"\n            }\n          );\n        },\n      },\n    });\n\n    // slides.forEach((slide) => {\n    //   const c01 = slide.querySelector('.news-item-thumb-img._02');\n    //   const c02 = slide.querySelector('.news-item-thumb-img._03');\n\n    //   const tl = gsap.timeline({ paused: true });\n\n    //   tl.to(c01, {\n    //     scale: .8,\n    //     duration: .3,\n    //     ease: \"expo.inOut\"\n    //   }).to(c02, {\n    //     scale: .6,\n    //     duration: .3,\n    //     ease: \"expo.inOut\"\n    //   }, \"-=0.3\");\n\n    //   slide.addEventListener('mouseover', () => { tl.play(); })\n    //   slide.addEventListener('mouseout', () => { tl.reverse(); })\n    // });\n  });\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1c7845f0e1de0887$export$8f060496e19d4bbb","lines","callback","forEach","line","wrapper","document","createElement","classList","add","parentNode","insertBefore","appendChild","$8fc6b8bbd146cdca$export$d47c320381fa2abf","container","squaresPerRow","fill","onlyEmbed","console","error","containerWidth","clientWidth","containerHeight","clientHeight","responsiveSquares","window","innerWidth","squareSize","parseInt","squaresPerColumn","Math","ceil","maskId","random","toString","substr","svgContent","Array","from","length","map","_","row","col","join","insertAdjacentHTML","maskContainer","className","style","maskImage","innerHTML","querySelector","$2rxJM","$cljH0","fonts","ready","then","homeIntroText","SplitType","types","tagName","setLinesWrapper","gsap","yPercent","sections","querySelectorAll","createSVGGrid","section","i","words","$c2ee0746a8bca6f4$var$createHomeIntroText","triggerElement","index","amount","isFirst","isLast","fromTo","opacity","scrollTrigger","trigger","scrub","start","end","pin","stagger","immediateRender","tl","timeline","paused","height","duration","delay","ease","progress","canvasSquares","each","descriptionLines","scrollTimeout","title","description","button","videoBg","anchorLink","maskEl","maskVideo","descriptionEls","$590857349261d23b$var$setListSectionScroll","titleMaskEl","squaresTitle","squaresVideo","tlIn","tlOut","to","overwrite","onEnter","clearTimeout","setTimeout","log","play","onEnterBack","reverse","onLeave","remove","onLeaveBack","sliders","Swiper","slidesPerView","navigation","nextEl","prevEl","slides","y"],"version":3,"file":"home.js.map"}