{"mappings":"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","sources":["<anon>","src/modules/createSVGGrid.js","src/modules/setLinesWrapper.js","src/modules/getHeight.js","src/globals.js","src/modules/setLoadingStates.js","src/modules/staggerHeading.js","src/modules/staggerText.js","src/modules/buttonStates.js","src/modules/playVideoOnScroll.js","src/modules/menus.js","src/modules/setImageMasks.js","src/modules/staggerElements.js","src/modules/formSubmit.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5744\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5744\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"cljH0\", function(module, exports) {\n\n$parcel$export(module.exports, \"createSVGGrid\", () => $8fc6b8bbd146cdca$export$d47c320381fa2abf);\nfunction $8fc6b8bbd146cdca$export$d47c320381fa2abf(container, squaresPerRow, fill, onlyEmbed) {\n    if (!container) {\n        console.error(\"Container not found\");\n        return;\n    }\n    // Get the container's dimensions\n    const containerWidth = container.clientWidth;\n    const containerHeight = container.clientHeight;\n    const responsiveSquares = window.innerWidth <= 991 ? squaresPerRow / 2 : squaresPerRow;\n    // Calculate the size of each square\n    const squareSize = parseInt(containerWidth / responsiveSquares);\n    // Calculate the number of squares per column\n    const squaresPerColumn = Math.ceil(containerHeight / squareSize);\n    // Create a unique ID for the mask\n    const maskId = \"mask-\" + Math.random().toString(36).substr(2, 9);\n    if (!onlyEmbed) {\n        // Create SVG content\n        let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                    <defs>\n                        <mask id=\"${maskId}\">\n                            ${Array.from({\n            length: squaresPerColumn\n        }).map((_, row)=>Array.from({\n                length: responsiveSquares\n            }).map((_, col)=>{\n                const x = col * squareSize;\n                const y = row * squareSize;\n                return `<rect x=\"${x}\" y=\"${y}\" width=\"${squareSize + 1}\" height=\"${squareSize + 1}\" fill=\"${fill ? fill : \"#000000\"}\"/>`;\n            }).join(\"\")).join(\"\")}\n                        </mask>\n                    </defs>\n                </svg>`;\n        // Create wrapper for the SVG and mask\n        const maskContainer = document.createElement(\"div\");\n        maskContainer.className = \"mask-container\";\n        maskContainer.style.maskImage = `url(#${maskId})`;\n        // Append SVG to maskContainer\n        maskContainer.innerHTML = svgContent;\n        container.parentNode.insertBefore(maskContainer, container);\n        maskContainer.appendChild(container);\n        return maskContainer.querySelector(\"svg\");\n    } else {\n        // Create SVG content\n        let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                            ${Array.from({\n            length: squaresPerColumn\n        }).map((_, row)=>Array.from({\n                length: squaresPerRow\n            }).map((_, col)=>{\n                const x = col * squareSize;\n                const y = row * squareSize;\n                return `<rect x=\"${x}\" y=\"${y}\" width=\"${squareSize + 1}\" height=\"${squareSize + 1}\" fill=\"${fill ? fill : \"#000000\"}\"/>`;\n            }).join(\"\")).join(\"\")}\n                </svg>`;\n        container.insertAdjacentHTML(\"beforeend\", svgContent);\n        return svgContent;\n    }\n}\n\n});\n\nparcelRegister(\"2rxJM\", function(module, exports) {\n\n$parcel$export(module.exports, \"setLinesWrapper\", () => $1c7845f0e1de0887$export$8f060496e19d4bbb);\nfunction $1c7845f0e1de0887$export$8f060496e19d4bbb(lines, callback) {\n    // Wrap each line in a .line-wrapper span\n    lines.forEach((line)=>{\n        const wrapper = document.createElement(\"span\");\n        wrapper.classList.add(\"line-wrapper\");\n        line.parentNode.insertBefore(wrapper, line);\n        wrapper.appendChild(line);\n    });\n    if (typeof callback === \"function\") callback();\n}\n\n});\n\nparcelRegister(\"kpGgi\", function(module, exports) {\n\n$parcel$export(module.exports, \"getElementHeightInRem\", () => $edc6ecc670d98733$export$d6278f2ff6cc02ee);\n/**\n * Converts a length value from any CSS unit to pixels.\n * @param {string} value - The length value as a string (e.g., \"2rem\", \"50px\").\n * @returns {number} - The length value in pixels.\n */ function $edc6ecc670d98733$var$convertToPixels(value) {\n    // Create a temporary element to use the browser's rendering to convert the value to pixels\n    const tempElement = document.createElement(\"div\");\n    tempElement.style.position = \"absolute\";\n    tempElement.style.visibility = \"hidden\";\n    tempElement.style.width = value;\n    document.body.appendChild(tempElement);\n    const pixelValue = parseFloat(window.getComputedStyle(tempElement).width);\n    document.body.removeChild(tempElement);\n    return pixelValue;\n}\nfunction $edc6ecc670d98733$export$d6278f2ff6cc02ee(element) {\n    if (!element) throw new Error(\"Element is required\");\n    // Get the computed style of the element\n    const computedStyle = window.getComputedStyle(element);\n    // Get the height of the element in pixels\n    const heightInPixels = parseFloat(computedStyle.height);\n    // Get the font size of the root element (html) in rem units and convert it to pixels\n    const rootFontSizeInRem = window.getComputedStyle(document.documentElement).fontSize;\n    const rootFontSizeInPixels = $edc6ecc670d98733$var$convertToPixels(rootFontSizeInRem);\n    // Calculate height in rem units\n    const heightInRem = heightInPixels / rootFontSizeInPixels;\n    return heightInRem;\n}\n\n});\n\nfunction $ce6a18b12420bce7$export$7fd17f34fe72f4b0() {\n    const loading = document.querySelector(\".loading\");\n    if (!loading) return;\n    const squares = loading.querySelectorAll(\"svg rect\");\n    gsap.to(squares, {\n        opacity: 0,\n        duration: 0.01,\n        stagger: {\n            from: \"random\",\n            each: 0.01\n        },\n        ease: \"none\",\n        immediateRender: true,\n        onComplete: ()=>{\n            loading.style.display = \"none\";\n        }\n    });\n    // Loading animation\n    const links = document.querySelectorAll(\"a\");\n    links.forEach((l)=>{\n        l.addEventListener(\"click\", (e)=>{\n            // e.preventDefault();\n            const href = l.href;\n            const url = new URL(href);\n            if (window.location.origin === url.origin && window.location.pathname !== url.pathname && l.target !== \"_blank\") {\n                e.preventDefault();\n                loading.style.display = \"flex\";\n                gsap.to(squares, {\n                    opacity: 1,\n                    duration: 0.005,\n                    stagger: {\n                        from: \"random\",\n                        each: 0.005\n                    },\n                    immediateRender: true\n                });\n                setTimeout(()=>{\n                    window.location.href = href;\n                }, 500);\n            }\n        });\n    });\n}\n\n\n\nvar $cljH0 = parcelRequire(\"cljH0\");\n// Link timelines to scroll position\nfunction $719658c63b791dcb$var$createScrollTrigger(triggerElement, start, end, delay, withScroll) {\n    const squares = triggerElement.querySelectorAll(\"rect\");\n    gsap.set(squares, {\n        opacity: 0\n    });\n    const trigger = {\n        trigger: triggerElement,\n        scrub: true,\n        start: start\n    };\n    if (!withScroll) {\n        trigger.onEnter = ()=>{\n            gsap.to(squares, {\n                opacity: 1,\n                delay: delay,\n                duration: 0.01,\n                stagger: {\n                    each: 0.01,\n                    from: \"random\"\n                },\n                ease: \"bounce.out\"\n            });\n        };\n        gsap.timeline({\n            scrollTrigger: trigger\n        });\n    } else {\n        trigger.end = end;\n        gsap.timeline({\n            scrollTrigger: trigger\n        }).to(squares, {\n            opacity: 1,\n            duration: 0.01,\n            stagger: {\n                each: 0.01,\n                from: \"random\"\n            },\n            ease: \"none\"\n        });\n    }\n}\nfunction $719658c63b791dcb$export$e727d27e39c4b766() {\n    const blocks = document.querySelectorAll(\"[stagger-heading]\");\n    blocks.forEach((el)=>{\n        const maskEl = (0, $cljH0.createSVGGrid)(el, 10);\n        el.classList.add(\"init\");\n        const startVal = el.dataset.startPos || \"center bottom\", endVal = el.dataset.endPos || \"bottom center\", delay = el.dataset.delay || 0, withScrollTrigger = el.dataset.withScroll || false;\n        $719658c63b791dcb$var$createScrollTrigger(maskEl, startVal, endVal, delay, withScrollTrigger);\n    });\n}\n\n\n\nvar $2rxJM = parcelRequire(\"2rxJM\");\n// Link timelines to scroll position\nfunction $1aa2e0393d0f1beb$var$createScrollTrigger(triggerElement, elements, start, end, stagger, delay, withScroll) {\n    const trigger = {\n        trigger: triggerElement,\n        scrub: true,\n        start: start\n    };\n    if (!withScroll) {\n        trigger.onEnter = ()=>{\n            gsap.to(elements, {\n                yPercent: 0,\n                stagger: stagger,\n                ease: \"power4.out\",\n                delay: Number(delay)\n            });\n        };\n        gsap.timeline({\n            scrollTrigger: trigger\n        });\n    } else {\n        trigger.end = end;\n        gsap.timeline({\n            scrollTrigger: trigger\n        }).to(words, {\n            yPercent: 0,\n            stagger: stagger,\n            ease: \"none\"\n        });\n    }\n}\nfunction $1aa2e0393d0f1beb$export$1601281ad392a6d8() {\n    // Split all words on the brand core section\n    const textEls = document.querySelectorAll(\"[stagger-text]\");\n    textEls.forEach((el)=>{\n        if (el.classList.contains(\"w-richtext\")) {\n            const staggerTextEls = new SplitType(el.querySelectorAll(\"p, li, h2, h3\"), {\n                types: \"lines\",\n                tagName: \"span\"\n            });\n            (0, $2rxJM.setLinesWrapper)(staggerTextEls.lines, ()=>{\n                gsap.set(staggerTextEls.lines, {\n                    yPercent: 100\n                });\n            });\n        } else {\n            const staggerTextEls = new SplitType(el, {\n                types: \"lines\",\n                tagName: \"span\"\n            });\n            (0, $2rxJM.setLinesWrapper)(staggerTextEls.lines, ()=>{\n                gsap.set(staggerTextEls.lines, {\n                    yPercent: 100\n                });\n            });\n        }\n    });\n    const textBlocks = document.querySelectorAll(\"[stagger-text]\");\n    textBlocks.forEach((el)=>{\n        el.classList.add(\"init\");\n        const words1 = el.querySelectorAll(\".line\"), startVal = el.dataset.startPos || \"center bottom\", endVal = el.dataset.endPos || \"bottom center\", stagger = el.dataset.stagger || 0.05, delay = el.dataset.delay || 0, withScrollTrigger = el.dataset.withScroll || false;\n        // let tl = gsap.timeline({ paused: true });\n        $1aa2e0393d0f1beb$var$createScrollTrigger(el, words1, startVal, endVal, stagger, delay, withScrollTrigger);\n    });\n}\n\n\nfunction $7650bdc578b78d7e$export$e49bfc3e559db7() {\n    const buttons = document.querySelectorAll(\".button\");\n    if (!buttons) return;\n    buttons.forEach((button)=>{\n        const buttonBg = button.querySelector(\".button-bg\");\n        const buttonLabel = button.querySelector(\".button-label-inner\");\n        const isRounded = button.classList.contains(\"is-giga\");\n        let buttonLabelChars;\n        if (buttonLabel) buttonLabelChars = new SplitType(buttonLabel, {\n            types: \"chars\",\n            tagName: \"span\"\n        });\n        if (buttonBg) {\n            if (isRounded) gsap.set(buttonBg, {\n                scale: 0\n            });\n            else gsap.set(buttonBg, {\n                yPercent: 100\n            });\n        }\n        button.addEventListener(\"mouseenter\", ()=>{\n            if (buttonBg) {\n                const animation = {\n                    duration: 0.3,\n                    ease: \"expo.out\"\n                };\n                if (!isRounded) animation.yPercent = 0;\n                else animation.scale = 1;\n                gsap.to(buttonBg, animation);\n            }\n            if (buttonLabel && buttonLabelChars) gsap.to(buttonLabelChars.chars, {\n                yPercent: -100,\n                stagger: 0.01,\n                duration: 0.3,\n                ease: \"expo.out\",\n                immediateRender: true\n            });\n            const circles = button.querySelectorAll(\"svg circle\");\n            if (circles) gsap.fromTo(button.querySelectorAll(\"svg circle\"), {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: 0.01,\n                stagger: {\n                    from: \"random\",\n                    each: 0.1\n                }\n            });\n        });\n        button.addEventListener(\"mouseleave\", ()=>{\n            if (buttonBg) {\n                const animation = {\n                    duration: 0.3,\n                    ease: \"expo.out\"\n                };\n                if (!isRounded) animation.yPercent = 100;\n                else animation.scale = 0;\n                gsap.to(buttonBg, animation);\n            }\n            if (buttonLabel && buttonLabelChars) gsap.set(buttonLabelChars.chars, {\n                yPercent: 0\n            });\n        });\n    });\n}\n\n\nfunction $8d7867a2083184cb$export$85958f7fefbafb9() {\n    const videos = document.querySelectorAll(\"video[data-play-onscroll]\");\n    if (!videos) return;\n    videos.forEach((video)=>{\n        const start = video.dataset.start || \"top bottom\";\n        const pauseOutside = video.dataset.pauseOutside === \"true\";\n        const rewind = video.dataset.rewind === \"true\";\n        const loop = video.dataset.loop === \"true\";\n        video.pause();\n        if (loop) video.loop = true;\n        let settings = {\n            trigger: video,\n            start: start,\n            onEnter: ()=>{\n                video.play();\n            }\n        };\n        if (pauseOutside) {\n            settings.onLeave = ()=>{\n                $8d7867a2083184cb$var$pauseOrRewind(video, rewind);\n            };\n            settings.onLeaveBack = ()=>{\n                $8d7867a2083184cb$var$pauseOrRewind(video, rewind);\n            };\n            settings.onEnterBack = ()=>{\n                console.log(\"play video\");\n                video.play();\n            };\n        } else settings.once = true;\n        ScrollTrigger.create(settings);\n    });\n}\nfunction $8d7867a2083184cb$var$pauseOrRewind(video, rewind) {\n    video.pause();\n    if (rewind) video.currentTime = 0;\n}\n// Function to check if the browser is Safari\nfunction $8d7867a2083184cb$var$isSafari() {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\nfunction $8d7867a2083184cb$export$8e058f710976483f() {\n    const videos = document.querySelectorAll(\"video.transparent-video\");\n    if (!videos) return;\n    videos.forEach((video)=>{\n        const webM = video.querySelector('source[type=\"video/webm\"]');\n        const mp4 = video.querySelector('source[type=\"video/mp4\"]');\n        let formatFound;\n        if ($8d7867a2083184cb$var$isSafari()) {\n            if (webM) webM.remove();\n            mp4.src = mp4.dataset.src;\n            formatFound = true;\n        } else {\n            if (mp4) mp4.remove();\n            webM.src = webM.dataset.src;\n            formatFound = true;\n        }\n        if (formatFound) video.load();\n    });\n}\n\n\n\nvar $kpGgi = parcelRequire(\"kpGgi\");\nfunction $7ec1dfd28ff53463$export$50e34a31bc7d170d() {\n    let mm = gsap.matchMedia();\n    // add a media query. When it matches, the associated function will run\n    mm.add(\"(min-width: 992px)\", ()=>{\n        const nav = document.querySelector(\".header .nav\"), dropdowns = nav.querySelectorAll(\".nav-dropdown-trigger-wrapper\"), dropdownEl = nav.querySelector(\".nav-dropdown-el.desktop\"), dropdownInner = dropdownEl.querySelector(\".nav-dropdown-el-inner\");\n        gsap.set(dropdownInner.querySelectorAll(\"[data-menu]\"), {\n            display: \"none\"\n        });\n        gsap.set(dropdownInner, {\n            height: \"0rem\"\n        });\n        let isHover = false;\n        let currentMenu;\n        dropdowns.forEach((dropdown)=>{\n            const id = dropdown.dataset.menu;\n            const bg = dropdown.querySelector(\".button-bg\");\n            // const iconClosed = dropdown.querySelector(\".nav-dropdown-icon.closed\");\n            const iconOpen = dropdown.querySelector(\".nav-dropdown-icon.open\");\n            if (!id) return;\n            const dropdownChars = new SplitType(dropdown.querySelector(\".button-label-inner\"), {\n                types: \"chars\",\n                tagName: \"span\"\n            });\n            gsap.set(bg, {\n                yPercent: 100\n            });\n            gsap.set(iconOpen.querySelectorAll(\"circle\"), {\n                opacity: 0\n            });\n            dropdown.addEventListener(\"mouseenter\", (e)=>{\n                if (currentMenu === id) return;\n                if (currentMenu) {\n                    const previousActiveEl = nav.querySelector(`.nav-dropdown-trigger-wrapper[data-menu=\"${currentMenu}\"]`);\n                    $7ec1dfd28ff53463$var$setOffState(previousActiveEl);\n                }\n                isHover = true;\n                currentMenu = id;\n                $7ec1dfd28ff53463$var$setOnState(dropdown);\n                // Logic for dropdown menu\n                const activeMenu = dropdownInner.querySelector(`[data-menu=\"${id}\"]`);\n                dropdownEl.classList.add(\"active\");\n                gsap.set(dropdownInner.querySelectorAll(\"[data-menu]\"), {\n                    display: \"none\"\n                });\n                gsap.set(activeMenu, {\n                    display: \"grid\"\n                });\n                const activeHeight = (0, $kpGgi.getElementHeightInRem)(activeMenu);\n                gsap.to(dropdownInner, {\n                    height: `${activeHeight}rem`,\n                    duration: 0.3,\n                    ease: \"expo.out\"\n                });\n            });\n            nav.addEventListener(\"mouseleave\", (e)=>{\n                isHover = false;\n                currentMenu = null;\n                $7ec1dfd28ff53463$var$setAllOffStates(dropdowns);\n                if (!$7ec1dfd28ff53463$var$isMouseOverElement(nav, e)) gsap.to(dropdownInner, {\n                    height: `0rem`,\n                    duration: 0.3,\n                    ease: \"expo.out\",\n                    onComplete: ()=>{\n                        gsap.set(dropdownInner.querySelectorAll(\"[data-menu]\"), {\n                            display: \"none\"\n                        });\n                        dropdownEl.classList.remove(\"active\");\n                    }\n                });\n            });\n        // return () => { // optional\n        //   // custom cleanup code here (runs when it STOPS matching)\n        // };\n        });\n    });\n    mm.add(\"(max-width: 991px)\", ()=>{\n        const nav = document.querySelector(\".header .nav\"), mobileTrigger = document.querySelector(\".mobile-trigger\"), mobileOverlay = document.querySelector(\".submenu-overlay\"), dropdowns = nav.querySelectorAll(\".nav-dropdown-trigger-wrapper\");\n        // dropdownEl = nav.querySelector(\".nav-dropdown-el.desktop\"),\n        // dropdownInner = dropdownEl.querySelector(\".nav-dropdown-el-inner\");\n        gsap.set(nav, {\n            height: 0\n        });\n        gsap.set(mobileOverlay, {\n            opacity: 0,\n            backdropFilter: \"blur(0px)\"\n        });\n        const mobileTriggerTl = gsap.timeline({\n            paused: true\n        });\n        mobileTriggerTl.to(mobileTrigger.querySelectorAll(\".circle-menu\"), {\n            scale: 0,\n            duration: 0.2\n        }).fromTo(mobileTrigger.querySelectorAll(\".circle-close\"), {\n            scale: 0\n        }, {\n            scale: 1,\n            duration: 0.2\n        }, 0);\n        mobileTrigger.addEventListener(\"click\", ()=>{\n            if (mobileTrigger.classList.contains(\"active\")) {\n                mobileTriggerTl.reverse();\n                gsap.to(nav, {\n                    height: 0,\n                    ease: \"expo.out\"\n                });\n                $7ec1dfd28ff53463$var$setAllDropdownOffStates(dropdowns);\n                gsap.to(mobileOverlay, {\n                    opacity: 0,\n                    backdropFilter: \"blur(0px)\",\n                    duration: 0.5,\n                    ease: \"expo.out\",\n                    onComplete: ()=>{\n                        gsap.set(mobileOverlay, {\n                            display: \"none\"\n                        });\n                    }\n                });\n            } else {\n                mobileTriggerTl.play();\n                gsap.to(nav, {\n                    height: \"auto\",\n                    ease: \"expo.out\"\n                });\n                gsap.set(mobileOverlay, {\n                    display: \"block\"\n                });\n                gsap.to(mobileOverlay, {\n                    opacity: 1,\n                    backdropFilter: \"blur(24px)\",\n                    duration: 0.5,\n                    ease: \"expo.out\"\n                });\n            }\n            mobileTrigger.classList.toggle(\"active\");\n        });\n        let currentMenu;\n        dropdowns.forEach((dropdown)=>{\n            const id = dropdown.dataset.menu;\n            const bg = dropdown.querySelector(\".button-bg\");\n            const dropdownInner = dropdown.querySelector(\".nav-dropdown-el.mobile\");\n            // const iconClosed = dropdown.querySelector(\".nav-dropdown-icon.closed\");\n            const iconOpen = dropdown.querySelector(\".nav-dropdown-icon.open\");\n            if (!id) return;\n            const dropdownChars = new SplitType(dropdown.querySelector(\".button-label-inner\"), {\n                types: \"chars\",\n                tagName: \"span\"\n            });\n            gsap.set(bg, {\n                yPercent: 100\n            });\n            gsap.set(iconOpen.querySelectorAll(\"circle\"), {\n                opacity: 0\n            });\n            dropdown.addEventListener(\"click\", ()=>{\n                if (currentMenu === id) {\n                    $7ec1dfd28ff53463$var$setDropdownOffState(dropdown);\n                    currentMenu = null;\n                } else {\n                    if (currentMenu) {\n                        const previousActiveEl = nav.querySelector(`.nav-dropdown-trigger-wrapper[data-menu=\"${currentMenu}\"]`);\n                        $7ec1dfd28ff53463$var$setDropdownOffState(previousActiveEl);\n                    }\n                    currentMenu = id;\n                    $7ec1dfd28ff53463$var$setDropdownOnState(dropdown);\n                }\n            });\n        });\n    });\n// // later, if we need to revert all the animations/ScrollTriggers...\n// mm.revert();\n}\nfunction $7ec1dfd28ff53463$var$isMouseOverElement(element, event) {\n    // Check if the mouse is over the specified element or its descendants\n    return element.contains(event.relatedTarget);\n}\nfunction $7ec1dfd28ff53463$var$setOnState(el) {\n    gsap.to(el.querySelectorAll(\".char\"), {\n        yPercent: -100,\n        stagger: 0.01,\n        duration: 0.3,\n        ease: \"expo.out\",\n        immediateRender: true\n    });\n    gsap.to(el.querySelector(\".button-bg\"), {\n        yPercent: 0,\n        duration: 0.3,\n        ease: \"expo.out\"\n    });\n    gsap.to(el.querySelectorAll(\".closed circle\"), {\n        opacity: 0,\n        duration: 0.01,\n        stagger: {\n            each: 0.1\n        }\n    });\n    gsap.to(el.querySelectorAll(\".open circle\"), {\n        opacity: 1,\n        duration: 0.01,\n        stagger: {\n            each: 0.1\n        }\n    });\n}\nfunction $7ec1dfd28ff53463$var$setOffState(el) {\n    gsap.set(el.querySelectorAll(\".char\"), {\n        yPercent: 0\n    });\n    gsap.to(el.querySelector(\".button-bg\"), {\n        yPercent: 100,\n        duration: 0.3,\n        ease: \"expo.out\"\n    });\n    gsap.to(el.querySelectorAll(\".closed circle\"), {\n        opacity: 1,\n        duration: 0.01,\n        stagger: {\n            each: 0.1\n        }\n    });\n    gsap.to(el.querySelectorAll(\".open circle\"), {\n        opacity: 0,\n        duration: 0.01,\n        stagger: {\n            each: 0.1\n        }\n    });\n}\nfunction $7ec1dfd28ff53463$var$setAllOffStates(dropdowns) {\n    dropdowns.forEach((el)=>$7ec1dfd28ff53463$var$setOffState(el));\n}\nfunction $7ec1dfd28ff53463$var$setDropdownOffState(dropdown) {\n    const dropdownInner = dropdown.querySelector(\".nav-dropdown-el.mobile\");\n    dropdownInner.classList.remove(\"active\");\n    gsap.to(dropdownInner, {\n        height: \"0rem\",\n        duration: 0.3,\n        ease: \"expo.out\"\n    });\n    $7ec1dfd28ff53463$var$setOffState(dropdown);\n}\nfunction $7ec1dfd28ff53463$var$setAllDropdownOffStates(dropdowns) {\n    dropdowns.forEach((el)=>$7ec1dfd28ff53463$var$setDropdownOffState(el));\n}\nfunction $7ec1dfd28ff53463$var$setDropdownOnState(dropdown) {\n    // Logic for dropdown menu\n    const activeMenu = dropdown.querySelector(`[data-menu]`);\n    const dropdownInner = dropdown.querySelector(\".nav-dropdown-el.mobile\");\n    dropdownInner.classList.add(\"active\");\n    const activeHeight = (0, $kpGgi.getElementHeightInRem)(activeMenu);\n    gsap.to(dropdownInner, {\n        height: `${activeHeight + 0.25}rem`,\n        duration: 0.3,\n        ease: \"expo.out\"\n    });\n    $7ec1dfd28ff53463$var$setOnState(dropdown);\n}\n\n\nfunction $d9d8e6151a123ccd$export$fc2ce4586759bfa0() {\n    const imageMasks = document.querySelectorAll(\".image-mask\");\n    if (!imageMasks) return;\n    imageMasks.forEach((el)=>{\n        if (el.classList.contains(\"diamond\")) $d9d8e6151a123ccd$var$setDiamondMask(el);\n        if (el.classList.contains(\"hexagon\")) $d9d8e6151a123ccd$var$setHexagonMask(el);\n        if (el.classList.contains(\"bubbles\")) $d9d8e6151a123ccd$var$setBubblesMask(el);\n    });\n}\nfunction $d9d8e6151a123ccd$var$setDiamondMask(el) {\n    const start = el.dataset.startPos || \"center bottom\";\n    gsap.set(el, {\n        clipPath: \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\"\n    });\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: el,\n            scrub: true,\n            start: start,\n            once: true,\n            onEnter: ()=>{\n                gsap.fromTo(el, {\n                    clipPath: \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\"\n                }, {\n                    clipPath: \"polygon(100% 0%, 60% 0%, 0% 60%, 0% 100%, 40% 100%, 100% 40%)\",\n                    duration: 1,\n                    ease: \"expo.out\"\n                });\n            }\n        }\n    });\n}\nfunction $d9d8e6151a123ccd$var$setHexagonMask(el) {\n    const start = el.dataset.startPos || \"center bottom\";\n    gsap.set(el, {\n        clipPath: \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\"\n    });\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: el,\n            scrub: true,\n            start: start,\n            once: true,\n            onEnter: ()=>{\n                gsap.fromTo(el, {\n                    clipPath: \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\"\n                }, {\n                    clipPath: \"polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)\",\n                    duration: 1,\n                    ease: \"expo.out\"\n                });\n            }\n        }\n    });\n}\nfunction $d9d8e6151a123ccd$var$setBubblesMask(el) {\n    const start = el.dataset.startPos || \"center bottom\";\n    const mask = el.querySelector(\".svg-mask\");\n    const maskId = \"mask-\" + Math.random().toString(36).substr(2, 9);\n    console.log(mask, mask.querySelector(\"mask\"));\n    mask.querySelector(\"clipPath\").id = maskId;\n    el.style.clipPath = `url(#${maskId})`;\n    const path = mask.querySelector(\"path\");\n    gsap.set(path, {\n        d: \"M1,0.5 C1,0.557,0.991,0.611,0.973,0.662 C0.966,0.683,0.957,0.704,0.947,0.724 C0.928,0.763,0.903,0.799,0.874,0.831 C0.842,0.868,0.804,0.9,0.761,0.926 C0.727,0.948,0.689,0.965,0.65,0.977 C0.602,0.992,0.552,1,0.5,1 C0.462,1,0.425,0.996,0.389,0.988 C0.376,0.985,0.363,0.981,0.35,0.977 C0.311,0.965,0.273,0.948,0.239,0.926 C0.187,0.895,0.142,0.854,0.105,0.807 C0.072,0.764,0.045,0.715,0.027,0.662 C0.009,0.611,0,0.557,0,0.5 C0,0.46,0.005,0.42,0.014,0.382 C0.018,0.367,0.022,0.352,0.027,0.338 C0.048,0.275,0.082,0.217,0.126,0.169 C0.158,0.132,0.196,0.1,0.239,0.074 C0.255,0.064,0.272,0.055,0.289,0.047 C0.353,0.017,0.425,0,0.5,0 C0.535,0,0.57,0.004,0.603,0.011 C0.68,0.027,0.75,0.06,0.81,0.107 C0.834,0.125,0.855,0.146,0.874,0.169 C0.918,0.217,0.952,0.275,0.973,0.338 C0.985,0.373,0.993,0.41,0.997,0.449 C0.999,0.466,1,0.483,1,0.5\"\n    });\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: el,\n            scrub: true,\n            start: start,\n            once: true,\n            onEnter: ()=>{\n                gsap.fromTo(path, {\n                    morphSVG: {\n                        shape: \"M1,0.5 C1,0.557,0.991,0.611,0.973,0.662 C0.966,0.683,0.957,0.704,0.947,0.724 C0.928,0.763,0.903,0.799,0.874,0.831 C0.842,0.868,0.804,0.9,0.761,0.926 C0.727,0.948,0.689,0.965,0.65,0.977 C0.602,0.992,0.552,1,0.5,1 C0.462,1,0.425,0.996,0.389,0.988 C0.376,0.985,0.363,0.981,0.35,0.977 C0.311,0.965,0.273,0.948,0.239,0.926 C0.187,0.895,0.142,0.854,0.105,0.807 C0.072,0.764,0.045,0.715,0.027,0.662 C0.009,0.611,0,0.557,0,0.5 C0,0.46,0.005,0.42,0.014,0.382 C0.018,0.367,0.022,0.352,0.027,0.338 C0.048,0.275,0.082,0.217,0.126,0.169 C0.158,0.132,0.196,0.1,0.239,0.074 C0.255,0.064,0.272,0.055,0.289,0.047 C0.353,0.017,0.425,0,0.5,0 C0.535,0,0.57,0.004,0.603,0.011 C0.68,0.027,0.75,0.06,0.81,0.107 C0.834,0.125,0.855,0.146,0.874,0.169 C0.918,0.217,0.952,0.275,0.973,0.338 C0.985,0.373,0.993,0.41,0.997,0.449 C0.999,0.466,1,0.483,1,0.5\",\n                        type: \"rotational\"\n                    }\n                }, {\n                    morphSVG: {\n                        shape: \"M1,0.212 C1,0.314,0.928,0.399,0.832,0.42 C0.838,0.446,0.842,0.473,0.842,0.501 C0.842,0.533,0.837,0.564,0.829,0.593 C0.841,0.59,0.853,0.588,0.866,0.588 C0.94,0.588,1,0.648,1,0.722 C1,0.796,0.94,0.856,0.866,0.856 C0.801,0.856,0.747,0.811,0.735,0.75 C0.673,0.809,0.59,0.844,0.499,0.844 C0.447,0.844,0.398,0.833,0.354,0.812 C0.354,0.816,0.354,0.819,0.354,0.823 C0.354,0.921,0.275,1,0.177,1 C0.079,1,0,0.921,0,0.823 C0,0.725,0.079,0.646,0.177,0.646 C0.181,0.646,0.185,0.646,0.189,0.646 C0.169,0.602,0.157,0.553,0.157,0.501 C0.157,0.465,0.163,0.43,0.173,0.397 C0.163,0.399,0.154,0.4,0.144,0.4 C0.064,0.4,0,0.336,0,0.256 C0,0.177,0.064,0.113,0.144,0.113 C0.215,0.113,0.274,0.165,0.285,0.233 C0.344,0.185,0.418,0.157,0.499,0.157 C0.527,0.157,0.555,0.16,0.581,0.167 C0.601,0.071,0.686,0,0.788,0 C0.905,0,1,0.095,1,0.212\",\n                        type: \"rotational\"\n                    },\n                    duration: 0.5\n                });\n            }\n        }\n    });\n}\n\n\n// Link timelines to scroll position\nfunction $4013e65a83b1b778$var$createScrollList(triggerElement, elements, start, stagger, delay) {\n    gsap.set(elements, {\n        yPercent: 100,\n        opacity: 0\n    });\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: start,\n            onEnter: ()=>{\n                gsap.to(elements, {\n                    yPercent: 0,\n                    opacity: 1,\n                    stagger: stagger,\n                    ease: \"power4.out\",\n                    delay: Number(delay)\n                });\n            }\n        }\n    });\n}\nfunction $4013e65a83b1b778$export$9b05384e3b3cbff1() {\n    const list = document.querySelectorAll(\"[stagger-list]\");\n    if (!list) return;\n    list.forEach((el)=>{\n        const elements = el.querySelectorAll(\"[stagger-el]\"), startVal = el.dataset.startPos || \"top top\", stagger = el.dataset.stagger || 0.05, delay = el.dataset.delay || 0;\n        if (!elements) return;\n        $4013e65a83b1b778$var$createScrollList(el, elements, startVal, stagger, delay);\n    });\n}\n\n\nfunction $b140b9eb34f1ac44$export$4bc49541bd3cd0fc() {\n    const forms = document.querySelectorAll(\"form\");\n    if (!forms) return;\n    forms.forEach((form)=>{\n        const formSubmitButton = form.querySelector(\".button.form-submit\");\n        const submitButton = form.querySelector(\".submit-button\");\n        const label = form.querySelector(\".button-label\");\n        // add event listener to the form submit button\n        formSubmitButton.addEventListener(\"click\", function(e) {\n            e.preventDefault(); // prevent the default action\n            // check if the form is valid\n            if (form.checkValidity()) {\n                // if valid, submit the form and change the button text\n                submitButton.click();\n                label.textContent = submitButton.getAttribute(\"data-wait\");\n            } else // if not valid, report validity (this will show the HTML5 validation messages)\n            form.reportValidity();\n        });\n    });\n}\n\n\n(0, $7ec1dfd28ff53463$export$50e34a31bc7d170d)();\n(0, $ce6a18b12420bce7$export$7fd17f34fe72f4b0)();\n(0, $7650bdc578b78d7e$export$e49bfc3e559db7)();\n(0, $8d7867a2083184cb$export$85958f7fefbafb9)();\n(0, $8d7867a2083184cb$export$8e058f710976483f)();\n(0, $d9d8e6151a123ccd$export$fc2ce4586759bfa0)();\n(0, $4013e65a83b1b778$export$9b05384e3b3cbff1)();\n(0, $b140b9eb34f1ac44$export$4bc49541bd3cd0fc)();\ndocument.fonts.ready.then(()=>{\n    (0, $1aa2e0393d0f1beb$export$1601281ad392a6d8)();\n    (0, $719658c63b791dcb$export$e727d27e39c4b766)();\n});\n\n})();\n//# sourceMappingURL=globals.js.map\n","export function createSVGGrid(container, squaresPerRow, fill, onlyEmbed) {\n  if (!container) {\n    console.error(\"Container not found\");\n    return;\n  }\n\n  // Get the container's dimensions\n  const containerWidth = container.clientWidth;\n  const containerHeight = container.clientHeight;\n\n  const responsiveSquares = window.innerWidth <= 991 ? (squaresPerRow / 2) : squaresPerRow;\n\n  // Calculate the size of each square\n  const squareSize = parseInt(containerWidth / responsiveSquares);\n\n  // Calculate the number of squares per column\n  const squaresPerColumn = Math.ceil(containerHeight / squareSize);\n\n  // Create a unique ID for the mask\n  const maskId = \"mask-\" + Math.random().toString(36).substr(2, 9);\n\n  if (!onlyEmbed) {\n    // Create SVG content\n    let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                    <defs>\n                        <mask id=\"${maskId}\">\n                            ${Array.from({ length: squaresPerColumn })\n                              .map((_, row) =>\n                                Array.from({ length: responsiveSquares })\n                                  .map((_, col) => {\n                                    const x = col * squareSize;\n                                    const y = row * squareSize;\n                                    return `<rect x=\"${x}\" y=\"${y}\" width=\"${\n                                      squareSize + 1\n                                    }\" height=\"${squareSize + 1}\" fill=\"${\n                                      fill ? fill : \"#000000\"\n                                    }\"/>`;\n                                  })\n                                  .join(\"\")\n                              )\n                              .join(\"\")}\n                        </mask>\n                    </defs>\n                </svg>`;\n    // Create wrapper for the SVG and mask\n    const maskContainer = document.createElement(\"div\");\n    maskContainer.className = \"mask-container\";\n    maskContainer.style.maskImage = `url(#${maskId})`;\n\n    // Append SVG to maskContainer\n    maskContainer.innerHTML = svgContent;\n    container.parentNode.insertBefore(maskContainer, container);\n    maskContainer.appendChild(container);\n\n    return maskContainer.querySelector(\"svg\");\n  } else {\n    // Create SVG content\n    let svgContent = `\n                <svg viewBox=\"0 0 ${containerWidth} ${containerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;\">\n                            ${Array.from({ length: squaresPerColumn })\n                              .map((_, row) =>\n                                Array.from({ length: squaresPerRow })\n                                  .map((_, col) => {\n                                    const x = col * squareSize;\n                                    const y = row * squareSize;\n                                    return `<rect x=\"${x}\" y=\"${y}\" width=\"${\n                                      squareSize + 1\n                                    }\" height=\"${squareSize + 1}\" fill=\"${\n                                      fill ? fill : \"#000000\"\n                                    }\"/>`;\n                                  })\n                                  .join(\"\")\n                              )\n                              .join(\"\")}\n                </svg>`;\n    container.insertAdjacentHTML(\"beforeend\", svgContent);\n\n    return svgContent;\n  }\n}\n","export function setLinesWrapper(lines, callback) {\n  // Wrap each line in a .line-wrapper span\n  lines.forEach(line => {\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('line-wrapper');\n    line.parentNode.insertBefore(wrapper, line);\n    wrapper.appendChild(line);\n  });\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n}","/**\n * Converts a length value from any CSS unit to pixels.\n * @param {string} value - The length value as a string (e.g., \"2rem\", \"50px\").\n * @returns {number} - The length value in pixels.\n */\nfunction convertToPixels(value) {\n  // Create a temporary element to use the browser's rendering to convert the value to pixels\n  const tempElement = document.createElement(\"div\");\n  tempElement.style.position = \"absolute\";\n  tempElement.style.visibility = \"hidden\";\n  tempElement.style.width = value;\n  document.body.appendChild(tempElement);\n  const pixelValue = parseFloat(window.getComputedStyle(tempElement).width);\n  document.body.removeChild(tempElement);\n  return pixelValue;\n}\n\n/**\n * Calculates the height of an element in rem units.\n * @param {HTMLElement} element - The target element.\n * @returns {number} - The height of the element in rem units.\n */\nexport function getElementHeightInRem(element) {\n  if (!element) {\n    throw new Error(\"Element is required\");\n  }\n\n  // Get the computed style of the element\n  const computedStyle = window.getComputedStyle(element);\n\n  // Get the height of the element in pixels\n  const heightInPixels = parseFloat(computedStyle.height);\n\n  // Get the font size of the root element (html) in rem units and convert it to pixels\n  const rootFontSizeInRem = window.getComputedStyle(\n    document.documentElement\n  ).fontSize;\n  const rootFontSizeInPixels = convertToPixels(rootFontSizeInRem);\n\n  // Calculate height in rem units\n  const heightInRem = heightInPixels / rootFontSizeInPixels;\n\n  return heightInRem;\n}\n","import { setLoadingStates } from \"./modules/setLoadingStates\";\nimport { setStaggerHeading } from \"./modules/staggerHeading\";\nimport { setStaggerText } from \"./modules/staggerText\";\nimport { initButtonStates } from \"./modules/buttonStates\";\nimport { playVideoOnScroll, setTransparentVideo } from \"./modules/playVideoOnScroll\";\nimport { initMenus } from \"./modules/menus\";\nimport { setImageMasks } from \"./modules/setImageMasks\";\nimport { setStaggerElements } from \"./modules/staggerElements\";\nimport { initFormSubmit } from \"./modules/formSubmit\";\n\ninitMenus();\nsetLoadingStates();\ninitButtonStates();\nplayVideoOnScroll();\nsetTransparentVideo();\nsetImageMasks();\nsetStaggerElements();\ninitFormSubmit();\n\ndocument.fonts.ready.then(() => {\n  setStaggerText();\n  setStaggerHeading();\n});","export function setLoadingStates() {\n  const loading = document.querySelector(\".loading\");\n  if (!loading) {\n    return;\n  }\n\n  const squares = loading.querySelectorAll(\"svg rect\");\n\n  gsap.to(squares, {\n    opacity: 0,\n    duration: 0.01,\n    stagger: {\n      from: \"random\",\n      each: 0.01,\n    },\n    ease: \"none\",\n    immediateRender: true,\n    onComplete: () => {\n      loading.style.display = \"none\";\n    }\n  });\n\n  // Loading animation\n  const links = document.querySelectorAll(\"a\");\n  links.forEach((l) => {\n    l.addEventListener(\"click\", (e) => {\n      // e.preventDefault();\n      const href = l.href;\n      const url = new URL(href);\n\n      if (\n        window.location.origin === url.origin &&\n        window.location.pathname !== url.pathname &&\n        l.target !== \"_blank\"\n      ) {\n        e.preventDefault();\n\n        loading.style.display = \"flex\";\n        gsap.to(squares, {\n          opacity: 1,\n          duration: 0.005,\n          stagger: {\n            from: \"random\",\n            each: 0.005,\n          },\n          immediateRender: true,\n        });\n\n        setTimeout(() => {\n          window.location.href = href;\n        }, 500);\n      }\n    });\n  });\n}\n","import { createSVGGrid } from \"./createSVGGrid\";\n\n// Link timelines to scroll position\nfunction createScrollTrigger(triggerElement, start, end, delay, withScroll) {\n  const squares = triggerElement.querySelectorAll('rect');\n\n  gsap.set(squares, { opacity: 0 });\n  const trigger = {\n    trigger: triggerElement,\n    scrub: true,\n    start,\n  };\n\n  if (!withScroll) {\n    trigger.onEnter = () => {\n      gsap.to(squares, {\n        opacity: 1,\n        delay: delay,\n        duration: 0.01,\n        stagger: {\n          each: 0.01,\n          from: \"random\",\n        },\n        ease: \"bounce.out\"\n      });\n    };\n\n    gsap.timeline({ scrollTrigger: trigger });\n  } else {\n    trigger.end = end;\n    gsap\n      .timeline({\n        scrollTrigger: trigger,\n      })\n      .to(squares, {\n        opacity: 1,\n        duration: 0.01,\n        stagger: {\n          each: 0.01,\n          from: \"random\",\n        },\n        ease: \"none\",\n      });\n  }\n}\n\nexport function setStaggerHeading() {\n  const blocks = document.querySelectorAll(\"[stagger-heading]\");\n\n  blocks.forEach((el) => {\n    const maskEl = createSVGGrid(el, 10);\n    el.classList.add('init');\n    const startVal = el.dataset.startPos || \"center bottom\",\n      endVal = el.dataset.endPos || \"bottom center\",\n      delay = el.dataset.delay || 0,\n      withScrollTrigger = el.dataset.withScroll || false;\n    createScrollTrigger(maskEl, startVal, endVal, delay, withScrollTrigger);\n  });\n}\n","import { setLinesWrapper } from \"./setLinesWrapper\";\n\n// Link timelines to scroll position\nfunction createScrollTrigger(triggerElement, elements, start, end, stagger, delay, withScroll) {\n  const trigger = {\n    trigger: triggerElement,\n    scrub: true,\n    start,\n  };\n\n  if (!withScroll) {\n    trigger.onEnter = () => {\n      gsap.to(elements, {\n        yPercent: 0,\n        stagger: stagger,\n        ease: \"power4.out\",\n        delay: Number(delay),\n      });\n    };\n\n    gsap.timeline({ scrollTrigger: trigger });\n  } else {\n    trigger.end = end;\n    gsap\n      .timeline({\n        scrollTrigger: trigger,\n      })\n      .to(words, {\n        yPercent: 0,\n        stagger: stagger,\n        ease: \"none\",\n      });\n  }\n}\n\nexport function setStaggerText() {\n  // Split all words on the brand core section\n  const textEls = document.querySelectorAll('[stagger-text]');\n\n  textEls.forEach((el) => {\n    if (el.classList.contains('w-richtext')) {\n      const staggerTextEls = new SplitType(el.querySelectorAll('p, li, h2, h3'), {\n        types: \"lines\",\n        tagName: \"span\",\n      });\n      setLinesWrapper(staggerTextEls.lines, () => {\n        gsap.set(staggerTextEls.lines, { yPercent: 100 });\n      });\n    } else {\n      const staggerTextEls = new SplitType(el, {\n        types: \"lines\",\n        tagName: \"span\",\n      });\n      setLinesWrapper(staggerTextEls.lines, () => {\n        gsap.set(staggerTextEls.lines, { yPercent: 100 });\n      });\n    }\n  })\n\n  const textBlocks = document.querySelectorAll(\"[stagger-text]\");\n\n  textBlocks.forEach((el) => {\n    el.classList.add(\"init\");\n    const words = el.querySelectorAll(\".line\"),\n      startVal = el.dataset.startPos || \"center bottom\",\n      endVal = el.dataset.endPos || \"bottom center\",\n      stagger = el.dataset.stagger || 0.05,\n      delay = el.dataset.delay || 0,\n      withScrollTrigger = el.dataset.withScroll || false;\n    // let tl = gsap.timeline({ paused: true });\n    createScrollTrigger(el, words, startVal, endVal, stagger, delay, withScrollTrigger);\n  });\n}\n","export function initButtonStates() {\n  const buttons = document.querySelectorAll(\".button\");\n\n  if (!buttons) {\n    return;\n  }\n\n  buttons.forEach((button) => {\n    const buttonBg = button.querySelector(\".button-bg\");\n    const buttonLabel = button.querySelector('.button-label-inner');\n    const isRounded = button.classList.contains('is-giga');\n    let buttonLabelChars;\n\n    if (buttonLabel) {\n      buttonLabelChars = new SplitType(\n        buttonLabel,\n        {\n          types: \"chars\",\n          tagName: \"span\",\n        }\n      );\n    }\n\n    if (buttonBg) {\n      if (isRounded) {\n        gsap.set(buttonBg, { scale: 0 });\n      } else {\n        gsap.set(buttonBg, { yPercent: 100 });\n      }\n    }\n    button.addEventListener(\"mouseenter\", () => {\n      if (buttonBg) {\n        const animation = {\n          duration: 0.3,\n          ease: \"expo.out\",\n        };\n\n        if (!isRounded) {\n          animation.yPercent = 0;\n        } else {\n          animation.scale = 1;\n        }\n\n        gsap.to(buttonBg, animation);\n      }\n      if (buttonLabel && buttonLabelChars) {\n        gsap.to(buttonLabelChars.chars, {\n          yPercent: -100,\n          stagger: 0.01,\n          duration: 0.3,\n          ease: \"expo.out\",\n          immediateRender: true,\n        });\n      }\n\n      const circles = button.querySelectorAll(\"svg circle\");\n      if (circles) {\n        gsap.fromTo(\n          button.querySelectorAll(\"svg circle\"),\n          {\n            opacity: 0,\n          },\n          {\n            opacity: 1,\n            duration: 0.01,\n            stagger: {\n              from: \"random\",\n              each: 0.1,\n            },\n          }\n        );\n      }\n    });\n\n    button.addEventListener(\"mouseleave\", () => {\n      if (buttonBg) {\n        const animation = {\n          duration: 0.3,\n          ease: \"expo.out\",\n        };\n\n        if (!isRounded) {\n          animation.yPercent = 100;\n        } else {\n          animation.scale = 0;\n        }\n\n        gsap.to(buttonBg, animation);\n      }\n\n      if (buttonLabel && buttonLabelChars) {\n        gsap.set(buttonLabelChars.chars, { yPercent: 0 });\n      }\n    });\n  });\n}\n","export function playVideoOnScroll() {\n  const videos = document.querySelectorAll('video[data-play-onscroll]');\n\n  if (!videos) {\n    return;\n  }\n\n  videos.forEach((video) => {\n    const start = video.dataset.start || 'top bottom';\n    const pauseOutside = video.dataset.pauseOutside === 'true';\n    const rewind = video.dataset.rewind === 'true';\n    const loop = video.dataset.loop === 'true';\n    video.pause();\n\n    if (loop) {\n      video.loop = true;\n    }\n    \n    let settings = {\n      trigger: video,\n      start: start,\n      onEnter: () => {\n        video.play();\n      }\n    };\n\n    if (pauseOutside) {\n      settings.onLeave = () => { pauseOrRewind(video, rewind) };\n      settings.onLeaveBack = () => { pauseOrRewind(video, rewind) };\n      settings.onEnterBack = () => { console.log(\"play video\"); video.play() };\n    } else {\n      settings.once = true;\n    }\n\n    ScrollTrigger.create(settings);\n  });\n}\n\nfunction pauseOrRewind(video, rewind) {\n  video.pause();\n  if (rewind) {\n    video.currentTime = 0;\n  }\n}\n\n// Function to check if the browser is Safari\nfunction isSafari() {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\n\nexport function setTransparentVideo() {\n  const videos = document.querySelectorAll(\"video.transparent-video\");\n\n  if (!videos) {\n    return;\n  }\n\n  videos.forEach((video) => {\n    const webM = video.querySelector('source[type=\"video/webm\"]');\n    const mp4 = video.querySelector('source[type=\"video/mp4\"]');\n    let formatFound;\n    if (isSafari()) {\n      if (webM) {\n        webM.remove();\n      }\n      mp4.src = mp4.dataset.src;\n      formatFound = true;\n    } else {\n      if (mp4) {\n        mp4.remove();\n      }\n      \n      webM.src = webM.dataset.src;\n      formatFound = true;\n    }\n\n    if (formatFound) {\n      video.load();\n    }\n  });\n}","import { getElementHeightInRem } from \"./getHeight\";\n\nexport function initMenus() {\n  let mm = gsap.matchMedia();\n  // add a media query. When it matches, the associated function will run\n  mm.add(\"(min-width: 992px)\", () => {\n    const nav = document.querySelector(\".header .nav\"),\n      dropdowns = nav.querySelectorAll(\".nav-dropdown-trigger-wrapper\"),\n      dropdownEl = nav.querySelector(\".nav-dropdown-el.desktop\"),\n      dropdownInner = dropdownEl.querySelector(\".nav-dropdown-el-inner\");\n\n    gsap.set(dropdownInner.querySelectorAll(\"[data-menu]\"), {\n      display: \"none\",\n    });\n    gsap.set(dropdownInner, { height: \"0rem\" });\n    let isHover = false;\n    let currentMenu;\n\n    dropdowns.forEach((dropdown) => {\n      const id = dropdown.dataset.menu;\n      const bg = dropdown.querySelector(\".button-bg\");\n      // const iconClosed = dropdown.querySelector(\".nav-dropdown-icon.closed\");\n      const iconOpen = dropdown.querySelector(\".nav-dropdown-icon.open\");\n\n      if (!id) {\n        return;\n      }\n\n      const dropdownChars = new SplitType(\n        dropdown.querySelector(\".button-label-inner\"),\n        {\n          types: \"chars\",\n          tagName: \"span\",\n        }\n      );\n\n      gsap.set(bg, { yPercent: 100 });\n      gsap.set(iconOpen.querySelectorAll(\"circle\"), { opacity: 0 });\n\n      dropdown.addEventListener(\"mouseenter\", (e) => {\n        if (currentMenu === id) {\n          return;\n        }\n\n        if (currentMenu) {\n          const previousActiveEl = nav.querySelector(\n            `.nav-dropdown-trigger-wrapper[data-menu=\"${currentMenu}\"]`\n          );\n          setOffState(previousActiveEl);\n        }\n\n        isHover = true;\n        currentMenu = id;\n\n        setOnState(dropdown);\n\n        // Logic for dropdown menu\n        const activeMenu = dropdownInner.querySelector(`[data-menu=\"${id}\"]`);\n\n        dropdownEl.classList.add(\"active\");\n        gsap.set(dropdownInner.querySelectorAll(\"[data-menu]\"), {\n          display: \"none\",\n        });\n        gsap.set(activeMenu, { display: \"grid\" });\n\n        const activeHeight = getElementHeightInRem(activeMenu);\n        gsap.to(dropdownInner, {\n          height: `${activeHeight}rem`,\n          duration: 0.3,\n          ease: \"expo.out\",\n        });\n      });\n\n      nav.addEventListener(\"mouseleave\", (e) => {\n        isHover = false;\n        currentMenu = null;\n\n        setAllOffStates(dropdowns);\n\n        if (!isMouseOverElement(nav, e)) {\n          gsap.to(dropdownInner, {\n            height: `0rem`,\n            duration: 0.3,\n            ease: \"expo.out\",\n            onComplete: () => {\n              gsap.set(dropdownInner.querySelectorAll(\"[data-menu]\"), {\n                display: \"none\",\n              });\n              dropdownEl.classList.remove(\"active\");\n            },\n          });\n        }\n      });\n\n      // return () => { // optional\n      //   // custom cleanup code here (runs when it STOPS matching)\n      // };\n    });\n  });\n\n  mm.add(\"(max-width: 991px)\", () => {\n\n    const nav = document.querySelector(\".header .nav\"),\n      mobileTrigger = document.querySelector(\".mobile-trigger\"),\n      mobileOverlay = document.querySelector(\".submenu-overlay\"),\n      dropdowns = nav.querySelectorAll(\".nav-dropdown-trigger-wrapper\");\n    // dropdownEl = nav.querySelector(\".nav-dropdown-el.desktop\"),\n    // dropdownInner = dropdownEl.querySelector(\".nav-dropdown-el-inner\");\n\n    gsap.set(nav, { height: 0 });\n    gsap.set(mobileOverlay, { opacity: 0, backdropFilter: \"blur(0px)\" });\n    const mobileTriggerTl = gsap.timeline({ paused: true });\n\n    mobileTriggerTl\n      .to(mobileTrigger.querySelectorAll(\".circle-menu\"), {\n        scale: 0,\n        duration: 0.2,\n        // ease: \"expo.inOut\",\n      })\n      .fromTo(\n        mobileTrigger.querySelectorAll(\".circle-close\"),\n        {\n          scale: 0,\n        },\n        {\n          scale: 1,\n          duration: 0.2,\n          // ease: \"expo.inOut\",\n        },\n        0\n      );\n\n    mobileTrigger.addEventListener(\"click\", () => {\n      if (mobileTrigger.classList.contains(\"active\")) {\n        mobileTriggerTl.reverse();\n        gsap.to(nav, {\n          height: 0,\n          ease: \"expo.out\",\n        });\n        setAllDropdownOffStates(dropdowns);\n\n        gsap.to(mobileOverlay, {\n          opacity: 0,\n          backdropFilter: \"blur(0px)\",\n          duration: 0.5,\n          ease: \"expo.out\",\n          onComplete: () => {\n            gsap.set(mobileOverlay, { display: \"none\" });\n          }\n        });\n        \n      } else {\n        mobileTriggerTl.play();\n        gsap.to(nav, {\n          height: \"auto\",\n          ease: \"expo.out\"\n        });\n        gsap.set(mobileOverlay, { display: \"block\" });\n        gsap.to(mobileOverlay,\n          {\n            opacity: 1,\n            backdropFilter: \"blur(24px)\",\n            duration: 0.5,\n            ease: \"expo.out\"\n          }\n        )\n      }\n\n      mobileTrigger.classList.toggle(\"active\");\n    });\n\n    let currentMenu;\n\n    dropdowns.forEach((dropdown) => {\n      const id = dropdown.dataset.menu;\n      const bg = dropdown.querySelector(\".button-bg\");\n      const dropdownInner = dropdown.querySelector('.nav-dropdown-el.mobile');\n      // const iconClosed = dropdown.querySelector(\".nav-dropdown-icon.closed\");\n      const iconOpen = dropdown.querySelector(\".nav-dropdown-icon.open\");\n\n      if (!id) {\n        return;\n      }\n\n      const dropdownChars = new SplitType(\n        dropdown.querySelector(\".button-label-inner\"),\n        {\n          types: \"chars\",\n          tagName: \"span\",\n        }\n      );\n\n      gsap.set(bg, { yPercent: 100 });\n      gsap.set(iconOpen.querySelectorAll(\"circle\"), { opacity: 0 });\n\n      dropdown.addEventListener('click', () => {\n        if (currentMenu === id) {\n          setDropdownOffState(dropdown);\n          currentMenu = null;\n        } else {\n          if (currentMenu) {\n            const previousActiveEl = nav.querySelector(\n              `.nav-dropdown-trigger-wrapper[data-menu=\"${currentMenu}\"]`\n            );\n            setDropdownOffState(previousActiveEl);\n          }\n\n          currentMenu = id;\n\n          setDropdownOnState(dropdown);\n        }\n      });\n    });\n  });\n\n  // // later, if we need to revert all the animations/ScrollTriggers...\n  // mm.revert();\n}\n\nfunction isMouseOverElement(element, event) {\n  // Check if the mouse is over the specified element or its descendants\n  return element.contains(event.relatedTarget);\n}\n\nfunction setOnState(el) {\n  gsap.to(el.querySelectorAll(\".char\"), {\n    yPercent: -100,\n    stagger: 0.01,\n    duration: 0.3,\n    ease: \"expo.out\",\n    immediateRender: true,\n  });\n\n  gsap.to(el.querySelector(\".button-bg\"), {\n    yPercent: 0,\n    duration: 0.3,\n    ease: \"expo.out\",\n  });\n\n  gsap.to(el.querySelectorAll(\".closed circle\"), {\n    opacity: 0,\n    duration: 0.01,\n    stagger: {\n      each: 0.1,\n      // from: \"random\",\n    },\n  });\n\n  gsap.to(el.querySelectorAll(\".open circle\"), {\n    opacity: 1,\n    duration: 0.01,\n    stagger: {\n      each: 0.1,\n      // from: \"random\",\n    },\n  });\n}\n\nfunction setOffState(el) {\n  gsap.set(el.querySelectorAll(\".char\"), {\n    yPercent: 0,\n  });\n\n  gsap.to(el.querySelector(\".button-bg\"), {\n    yPercent: 100,\n    duration: 0.3,\n    ease: \"expo.out\",\n  });\n\n  gsap.to(el.querySelectorAll(\".closed circle\"), {\n    opacity: 1,\n    duration: 0.01,\n    stagger: {\n      each: 0.1,\n      // from: \"random\",\n    },\n  });\n\n  gsap.to(el.querySelectorAll(\".open circle\"), {\n    opacity: 0,\n    duration: 0.01,\n    stagger: {\n      each: 0.1,\n      // from: \"random\",\n    },\n  });\n}\n\nfunction setAllOffStates(dropdowns) {\n  dropdowns.forEach((el) => setOffState(el));\n}\n\nfunction setDropdownOffState(dropdown) {\n  const dropdownInner = dropdown.querySelector(\".nav-dropdown-el.mobile\");\n\n  dropdownInner.classList.remove(\"active\");\n\n  gsap.to(dropdownInner, {\n    height: \"0rem\",\n    duration: 0.3,\n    ease: \"expo.out\",\n  });\n\n  setOffState(dropdown);\n}\n\nfunction setAllDropdownOffStates(dropdowns) {\n  dropdowns.forEach((el) => setDropdownOffState(el));\n}\n\nfunction setDropdownOnState(dropdown) {\n  // Logic for dropdown menu\n  const activeMenu = dropdown.querySelector(`[data-menu]`);\n  const dropdownInner = dropdown.querySelector(\".nav-dropdown-el.mobile\");\n  \n  dropdownInner.classList.add(\"active\");\n  \n  const activeHeight = getElementHeightInRem(activeMenu);\n  gsap.to(dropdownInner, {\n    height: `${(activeHeight + 0.25)}rem`,\n    duration: 0.3,\n    ease: \"expo.out\",\n  });\n  \n  setOnState(dropdown);\n}","export function setImageMasks() {\n  const imageMasks = document.querySelectorAll(\".image-mask\");\n\n  if (!imageMasks) {\n    return;\n  }\n\n  imageMasks.forEach((el) => {\n    if (el.classList.contains(\"diamond\")) {\n      setDiamondMask(el);\n    }\n    if (el.classList.contains(\"hexagon\")) {\n      setHexagonMask(el);\n    }\n    if (el.classList.contains(\"bubbles\")) {\n      setBubblesMask(el);\n    }\n  });\n}\n\nfunction setDiamondMask(el) {\n  const start = el.dataset.startPos || \"center bottom\";\n  gsap.set(el, {\n    clipPath: \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\",\n  });\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: el,\n      scrub: true,\n      start,\n      once: true,\n      onEnter: () => {\n        gsap.fromTo(\n          el,\n          {\n            clipPath:\n              \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\",\n          },\n          {\n            clipPath:\n              \"polygon(100% 0%, 60% 0%, 0% 60%, 0% 100%, 40% 100%, 100% 40%)\",\n            duration: 1,\n            ease: \"expo.out\",\n          }\n        );\n      },\n    },\n  });\n}\n\nfunction setHexagonMask(el) {\n  const start = el.dataset.startPos || \"center bottom\";\n  gsap.set(el, {\n    clipPath: \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\",\n  });\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: el,\n      scrub: true,\n      start,\n      once: true,\n      onEnter: () => {\n        gsap.fromTo(\n          el,\n          {\n            clipPath:\n              \"polygon(100% 0%, 100% 0%, 0% 100%, 0% 100%, 0% 100%, 100% 0%)\",\n          },\n          {\n            clipPath:\n              \"polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)\",\n            duration: 1,\n            ease: \"expo.out\",\n          }\n        );\n      },\n    },\n  });\n}\n\nfunction setBubblesMask(el) {\n  const start = el.dataset.startPos || \"center bottom\";\n  const mask = el.querySelector(\".svg-mask\");\n  const maskId = \"mask-\" + Math.random().toString(36).substr(2, 9);\n\n  console.log(mask, mask.querySelector(\"mask\"));\n\n  mask.querySelector(\"clipPath\").id = maskId;\n  el.style.clipPath = `url(#${maskId})`;\n\n  const path = mask.querySelector(\"path\");\n\n  gsap.set(path, {\n    d: \"M1,0.5 C1,0.557,0.991,0.611,0.973,0.662 C0.966,0.683,0.957,0.704,0.947,0.724 C0.928,0.763,0.903,0.799,0.874,0.831 C0.842,0.868,0.804,0.9,0.761,0.926 C0.727,0.948,0.689,0.965,0.65,0.977 C0.602,0.992,0.552,1,0.5,1 C0.462,1,0.425,0.996,0.389,0.988 C0.376,0.985,0.363,0.981,0.35,0.977 C0.311,0.965,0.273,0.948,0.239,0.926 C0.187,0.895,0.142,0.854,0.105,0.807 C0.072,0.764,0.045,0.715,0.027,0.662 C0.009,0.611,0,0.557,0,0.5 C0,0.46,0.005,0.42,0.014,0.382 C0.018,0.367,0.022,0.352,0.027,0.338 C0.048,0.275,0.082,0.217,0.126,0.169 C0.158,0.132,0.196,0.1,0.239,0.074 C0.255,0.064,0.272,0.055,0.289,0.047 C0.353,0.017,0.425,0,0.5,0 C0.535,0,0.57,0.004,0.603,0.011 C0.68,0.027,0.75,0.06,0.81,0.107 C0.834,0.125,0.855,0.146,0.874,0.169 C0.918,0.217,0.952,0.275,0.973,0.338 C0.985,0.373,0.993,0.41,0.997,0.449 C0.999,0.466,1,0.483,1,0.5\",\n  });\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: el,\n      scrub: true,\n      start,\n      once: true,\n      onEnter: () => {\n        gsap.fromTo(\n          path,\n          {\n            morphSVG: {\n              shape:\n                \"M1,0.5 C1,0.557,0.991,0.611,0.973,0.662 C0.966,0.683,0.957,0.704,0.947,0.724 C0.928,0.763,0.903,0.799,0.874,0.831 C0.842,0.868,0.804,0.9,0.761,0.926 C0.727,0.948,0.689,0.965,0.65,0.977 C0.602,0.992,0.552,1,0.5,1 C0.462,1,0.425,0.996,0.389,0.988 C0.376,0.985,0.363,0.981,0.35,0.977 C0.311,0.965,0.273,0.948,0.239,0.926 C0.187,0.895,0.142,0.854,0.105,0.807 C0.072,0.764,0.045,0.715,0.027,0.662 C0.009,0.611,0,0.557,0,0.5 C0,0.46,0.005,0.42,0.014,0.382 C0.018,0.367,0.022,0.352,0.027,0.338 C0.048,0.275,0.082,0.217,0.126,0.169 C0.158,0.132,0.196,0.1,0.239,0.074 C0.255,0.064,0.272,0.055,0.289,0.047 C0.353,0.017,0.425,0,0.5,0 C0.535,0,0.57,0.004,0.603,0.011 C0.68,0.027,0.75,0.06,0.81,0.107 C0.834,0.125,0.855,0.146,0.874,0.169 C0.918,0.217,0.952,0.275,0.973,0.338 C0.985,0.373,0.993,0.41,0.997,0.449 C0.999,0.466,1,0.483,1,0.5\",\n              type: \"rotational\",\n            },\n          },\n          {\n            morphSVG: {\n              shape:\n                \"M1,0.212 C1,0.314,0.928,0.399,0.832,0.42 C0.838,0.446,0.842,0.473,0.842,0.501 C0.842,0.533,0.837,0.564,0.829,0.593 C0.841,0.59,0.853,0.588,0.866,0.588 C0.94,0.588,1,0.648,1,0.722 C1,0.796,0.94,0.856,0.866,0.856 C0.801,0.856,0.747,0.811,0.735,0.75 C0.673,0.809,0.59,0.844,0.499,0.844 C0.447,0.844,0.398,0.833,0.354,0.812 C0.354,0.816,0.354,0.819,0.354,0.823 C0.354,0.921,0.275,1,0.177,1 C0.079,1,0,0.921,0,0.823 C0,0.725,0.079,0.646,0.177,0.646 C0.181,0.646,0.185,0.646,0.189,0.646 C0.169,0.602,0.157,0.553,0.157,0.501 C0.157,0.465,0.163,0.43,0.173,0.397 C0.163,0.399,0.154,0.4,0.144,0.4 C0.064,0.4,0,0.336,0,0.256 C0,0.177,0.064,0.113,0.144,0.113 C0.215,0.113,0.274,0.165,0.285,0.233 C0.344,0.185,0.418,0.157,0.499,0.157 C0.527,0.157,0.555,0.16,0.581,0.167 C0.601,0.071,0.686,0,0.788,0 C0.905,0,1,0.095,1,0.212\",\n              type: \"rotational\",\n            },\n            duration: 0.5,\n            // ease: \"expo.out\",\n          }\n        );\n      },\n    },\n  });\n}\n","// Link timelines to scroll position\nfunction createScrollList(\n  triggerElement,\n  elements,\n  start,\n  stagger,\n  delay,\n) {\n  gsap.set(elements, {\n    yPercent: 100,\n    opacity: 0,\n  })\n\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: triggerElement,\n      scrub: true,\n      start,\n      onEnter: () => {\n        gsap.to(elements, {\n          yPercent: 0,\n          opacity: 1,\n          stagger,\n          ease: \"power4.out\",\n          delay: Number(delay),\n        });\n      },\n    },\n  });\n}\n\nexport function setStaggerElements() {\n  const list = document.querySelectorAll(\"[stagger-list]\");\n\n  if (!list) {\n    return;\n  }\n\n  list.forEach((el) => {\n    const elements = el.querySelectorAll(\"[stagger-el]\"),\n      startVal = el.dataset.startPos || \"top top\",\n      stagger = el.dataset.stagger || 0.05,\n      delay = el.dataset.delay || 0;\n    \n    if (!elements) {\n      return;\n    }\n    \n    createScrollList(el, elements, startVal, stagger, delay);\n  });\n}\n","export function initFormSubmit() {\n  const forms = document.querySelectorAll(\"form\");\n\n  if (!forms) {\n    return;\n  }\n\n  forms.forEach((form) => {\n    const formSubmitButton = form.querySelector(\".button.form-submit\");\n    const submitButton = form.querySelector(\".submit-button\");\n    const label = form.querySelector(\".button-label\");\n  \n    // add event listener to the form submit button\n    formSubmitButton.addEventListener(\"click\", function (e) {\n      e.preventDefault(); // prevent the default action\n      // check if the form is valid\n      if (form.checkValidity()) {\n        // if valid, submit the form and change the button text\n        submitButton.click();\n        \n        label.textContent = submitButton.getAttribute(\"data-wait\");\n      } else {\n        // if not valid, report validity (this will show the HTML5 validation messages)\n        form.reportValidity();\n      }\n    });\n  });\n}"],"names":["mm","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$8fc6b8bbd146cdca$export$d47c320381fa2abf","container","squaresPerRow","fill","onlyEmbed","console","error","containerWidth","clientWidth","containerHeight","clientHeight","responsiveSquares","window","innerWidth","squareSize","parseInt","squaresPerColumn","Math","ceil","maskId","random","toString","substr","svgContent","Array","from","length","map","_","row","col","join","insertAdjacentHTML","maskContainer","document","createElement","className","style","maskImage","innerHTML","parentNode","insertBefore","appendChild","querySelector","$1c7845f0e1de0887$export$8f060496e19d4bbb","lines","callback","forEach","line","wrapper","classList","add","$edc6ecc670d98733$export$d6278f2ff6cc02ee","element","heightInPixels","parseFloat","computedStyle","getComputedStyle","height","$edc6ecc670d98733$var$convertToPixels","value","tempElement","position","visibility","width","body","pixelValue","removeChild","documentElement","fontSize","$cljH0","$2rxJM","$8d7867a2083184cb$var$pauseOrRewind","video","rewind","pause","currentTime","$kpGgi","$7ec1dfd28ff53463$var$setOnState","el","gsap","to","querySelectorAll","yPercent","stagger","duration","ease","immediateRender","opacity","each","$7ec1dfd28ff53463$var$setOffState","$7ec1dfd28ff53463$var$setDropdownOffState","dropdown","dropdownInner","remove","matchMedia","currentMenu","nav","dropdowns","dropdownEl","display","dataset","menu","bg","iconOpen","SplitType","types","tagName","addEventListener","activeMenu","activeHeight","getElementHeightInRem","$7ec1dfd28ff53463$var$setAllOffStates","contains","event","relatedTarget","onComplete","mobileTrigger","mobileOverlay","backdropFilter","mobileTriggerTl","timeline","paused","scale","fromTo","reverse","$7ec1dfd28ff53463$var$setAllDropdownOffStates","play","toggle","$7ec1dfd28ff53463$var$setDropdownOnState","loading","squares","links","l","href","url","URL","location","origin","pathname","target","preventDefault","setTimeout","buttons","button","buttonLabelChars","buttonBg","buttonLabel","isRounded","animation","chars","videos","start","pauseOutside","loop","settings","trigger","onEnter","onLeave","onLeaveBack","onEnterBack","log","once","ScrollTrigger","create","webM","mp4","test","navigator","userAgent","src","load","imageMasks","$d9d8e6151a123ccd$var$setDiamondMask","startPos","clipPath","scrollTrigger","scrub","$d9d8e6151a123ccd$var$setHexagonMask","$d9d8e6151a123ccd$var$setBubblesMask","mask","path","d","morphSVG","shape","type","list","elements","startVal","delay","Number","forms","form","formSubmitButton","submitButton","label","checkValidity","click","textContent","getAttribute","reportValidity","fonts","ready","then","textEls","staggerTextEls","setLinesWrapper","textBlocks","words1","endVal","endPos","withScrollTrigger","withScroll","$1aa2e0393d0f1beb$var$createScrollTrigger","triggerElement","end","words","blocks","maskEl","createSVGGrid","$719658c63b791dcb$var$createScrollTrigger"],"version":3,"file":"globals.js.map"}