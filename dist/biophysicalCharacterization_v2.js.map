{"mappings":"A,C,K,I,E,W,E,C,E,E,C,E,E,E,iB,CE8IA,eAAe,EAAU,CAAE,EACzB,EAAG,IAAI,EACT,C,M,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,EDhJO,SAAS,EAAgB,CAAK,CAAE,CAAQ,EAE7C,EAAM,OAAO,CAAC,AAAA,IACZ,IAAM,EAAU,SAAS,aAAa,CAAC,QACvC,EAAQ,SAAS,CAAC,GAAG,CAAC,gBACtB,EAAK,UAAU,CAAC,YAAY,CAAC,EAAS,GACtC,EAAQ,WAAW,CAAC,EACtB,GAEwB,YAApB,OAAO,GACT,GAEJ,C,O,c,C,E,O,C,kB,C,I,I,E,I,K,E,W,C,E,a,C,C,E,G,E,SC0IA,AApJA,WACE,IAAM,EAAO,SAAS,gBAAgB,CAAC,yBAElC,GAIL,EAAK,OAAO,CAAC,AAAC,IACZ,IAAM,EAAU,EAAO,aAAa,CAAC,oBACnC,EAAQ,EAAO,aAAa,CAAC,0BAE/B,GAAI,CAAC,GAAW,CAAC,EACf,OAGF,IAAM,EAAQ,EAAM,aAAa,CAAC,gCAC5B,EAAK,AA2Bf,SAAkB,CAAK,EACrB,IAAM,EAAa,EAAM,aAAa,CAAC,8BACrC,EAAiB,EAAM,aAAa,CAAC,kCAIrC,EAAW,EAAM,aAAa,CAAC,mCACjC,kBAAoB,EAAM,gBAAgB,CACxC,2CAGF,KAAK,GAAG,CAAC,EAAY,CAAE,OAAQ,CAAE,GACjC,KAAK,GAAG,CAAC,EAAgB,CAAE,OAAQ,CAAE,GACrC,KAAK,GAAG,CAAC,EAAU,CAAE,QAAS,OAAQ,QAAS,CAAE,GACjD,KAAK,GAAG,CAAC,kBAAmB,CAAE,QAAS,CAAE,GACzC,KAAK,GAAG,CAAC,EAAO,CAAE,WAAY,SAAU,eAAgB,WAAY,GAcpE,IAAM,EAAK,KAAK,QAAQ,CAAC,CAAE,OAAQ,CAAA,CAAK,GAiExC,OA/DA,EAAG,GAAG,CAAC,EAAU,CACf,QAAS,OACX,GACG,EAAE,CACD,EACA,CACE,WAAY,UACZ,eAAgB,aAChB,SAAU,EAEZ,EACA,GAED,EAAE,CACD,EACA,CACE,QAAS,GACT,SAAU,GACV,KAAM,YACR,EACA,GAED,EAAE,CACD,EACA,CACE,OAAQ,OACR,SAAU,EACV,KAAM,YACR,EACA,IAED,EAAE,CACD,EACA,CACE,OAAQ,OACR,SAAU,EACV,KAAM,YACR,EACA,IAED,EAAE,CACD,kBACA,CACE,QAAS,EACT,SAAU,IACV,QAAS,CACP,KAAM,SACN,KAAM,GACR,EACA,KAAM,MACR,EACA,IAYG,CACT,EA1HwB,GAEpB,EAAQ,gBAAgB,CAAC,QAAS,IAAM,EAAU,IAClD,EAAM,gBAAgB,CAAC,QAAS,IAAM,AA6H1C,CAAA,SAAoB,CAAE,EACpB,EAAG,OAAO,EACZ,CAAA,EA/HqD,IAEjD,IAAM,EAAoB,EAAM,gBAAgB,CAAC,cAEjD,EAAM,gBAAgB,CAAC,aAAc,KACnC,KAAK,MAAM,CACT,EACA,CACE,QAAS,CACX,EACA,CACE,QAAS,EACT,SAAU,IACV,QAAS,CACP,KAAM,SACN,KAAM,GACR,EACA,KAAM,MACR,EAEJ,EACF,EACF,G,C","sources":["<anon>","src/modules/setLinesWrapper.js","src/biophysicalCharacterization_v2.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5744\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5744\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2rxJM\", function(module, exports) {\n\n$parcel$export(module.exports, \"setLinesWrapper\", () => $1c7845f0e1de0887$export$8f060496e19d4bbb);\nfunction $1c7845f0e1de0887$export$8f060496e19d4bbb(lines, callback) {\n    // Wrap each line in a .line-wrapper span\n    lines.forEach((line)=>{\n        const wrapper = document.createElement(\"span\");\n        wrapper.classList.add(\"line-wrapper\");\n        line.parentNode.insertBefore(wrapper, line);\n        wrapper.appendChild(line);\n    });\n    if (typeof callback === \"function\") callback();\n}\n\n});\n\nparcelRequire(\"2rxJM\");\nfunction $ffdbe7e5c84929bf$var$initMethodsList() {\n    const team = document.querySelectorAll(\".bio-char-method-item\");\n    if (!team) return;\n    team.forEach((member)=>{\n        const trigger = member.querySelector(\".bio-char-method\"), modal = member.querySelector(\".bio-char-method_modal\");\n        if (!trigger || !modal) return;\n        const close = modal.querySelector(\".bio-char-method_modal-close\");\n        const tl = $ffdbe7e5c84929bf$var$setModal(modal);\n        trigger.addEventListener(\"click\", ()=>$ffdbe7e5c84929bf$var$openModal(tl));\n        close.addEventListener(\"click\", ()=>$ffdbe7e5c84929bf$var$closeModal(tl));\n        const modalCloseCircles1 = close.querySelectorAll(\"svg circle\");\n        close.addEventListener(\"mouseenter\", ()=>{\n            gsap.fromTo(modalCloseCircles1, {\n                opacity: 0\n            }, {\n                opacity: 1,\n                duration: 0.01,\n                stagger: {\n                    from: \"random\",\n                    each: 0.05\n                },\n                ease: \"none\"\n            });\n        });\n    });\n}\nfunction $ffdbe7e5c84929bf$var$setModal(modal) {\n    const imgWrapper = modal.querySelector(\".bio-char-method_modal-img\"), contentWrapper = modal.querySelector(\".bio-char-method_modal-content\"), // content = contentWrapper.querySelectorAll(\n    //   \".bio-char-method_content h3, .bio-char-method_content p\"\n    // ),\n    backdrop = modal.querySelector(\".bio-char-method_modal-backdrop\");\n    modalCloseCircles = modal.querySelectorAll(\".bio-char-method_modal-close svg circle\");\n    gsap.set(imgWrapper, {\n        height: 0\n    });\n    gsap.set(contentWrapper, {\n        height: 0\n    });\n    gsap.set(backdrop, {\n        display: \"none\",\n        opacity: 0\n    });\n    gsap.set(modalCloseCircles, {\n        opacity: 0\n    });\n    gsap.set(modal, {\n        visibility: \"hidden\",\n        backdropFilter: \"blur(0px)\"\n    });\n    // // Split all words on the brand core section\n    // content.forEach((l) => {\n    //   const staggerTextEls = new SplitType(l, {\n    //     types: \"lines\",\n    //     tagName: \"span\",\n    //   });\n    //   setLinesWrapper(staggerTextEls.lines, () => {\n    //     gsap.set(staggerTextEls.lines, { yPercent: 100 });\n    //   });\n    // });\n    const tl = gsap.timeline({\n        paused: true\n    });\n    tl.set(backdrop, {\n        display: \"block\"\n    }).to(modal, {\n        visibility: \"visible\",\n        backdropFilter: \"blur(24px)\",\n        duration: 0.5\n    }, 0).to(backdrop, {\n        opacity: 0.8,\n        duration: 0.5,\n        ease: \"expo.inOut\"\n    }, 0).to(imgWrapper, {\n        height: \"auto\",\n        duration: 1,\n        ease: \"expo.inOut\"\n    }, 0.1).to(contentWrapper, {\n        height: \"auto\",\n        duration: 1,\n        ease: \"expo.inOut\"\n    }, 0.2).to(modalCloseCircles, {\n        opacity: 1,\n        duration: 0.01,\n        stagger: {\n            from: \"random\",\n            each: 0.05\n        },\n        ease: \"none\"\n    }, 0.2);\n    // .to(\n    //   contentWrapper.querySelectorAll(\".bio-char-method_content .line\"),\n    //   {\n    //     yPercent: 0,\n    //     // duration: 1,\n    //     stagger: 0.01,\n    //     ease: \"expo.inOut\",\n    //   },\n    //   0.5\n    // );\n    return tl;\n}\nasync function $ffdbe7e5c84929bf$var$openModal(tl) {\n    tl.play();\n}\nfunction $ffdbe7e5c84929bf$var$closeModal(tl) {\n    tl.reverse();\n}\n$ffdbe7e5c84929bf$var$initMethodsList();\n\n})();\n//# sourceMappingURL=biophysicalCharacterization_v2.js.map\n","export function setLinesWrapper(lines, callback) {\n  // Wrap each line in a .line-wrapper span\n  lines.forEach(line => {\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('line-wrapper');\n    line.parentNode.insertBefore(wrapper, line);\n    wrapper.appendChild(line);\n  });\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n}","import { setLinesWrapper } from \"./modules/setLinesWrapper\";\n\nfunction initMethodsList() {\n  const team = document.querySelectorAll(\".bio-char-method-item\");\n\n  if (!team) {\n    return;\n  }\n\n  team.forEach((member) => {\n    const trigger = member.querySelector(\".bio-char-method\"),\n      modal = member.querySelector(\".bio-char-method_modal\");\n\n    if (!trigger || !modal) {\n      return;\n    }\n\n    const close = modal.querySelector(\".bio-char-method_modal-close\");\n    const tl = setModal(modal);\n\n    trigger.addEventListener(\"click\", () => openModal(tl));\n    close.addEventListener(\"click\", () => closeModal(tl));\n\n    const modalCloseCircles = close.querySelectorAll(\"svg circle\");\n\n    close.addEventListener(\"mouseenter\", () => {\n      gsap.fromTo(\n        modalCloseCircles,\n        {\n          opacity: 0,\n        },\n        {\n          opacity: 1,\n          duration: 0.01,\n          stagger: {\n            from: \"random\",\n            each: 0.05,\n          },\n          ease: \"none\",\n        }\n      );\n    });\n  });\n}\n\nfunction setModal(modal) {\n  const imgWrapper = modal.querySelector(\".bio-char-method_modal-img\"),\n    contentWrapper = modal.querySelector(\".bio-char-method_modal-content\"),\n    // content = contentWrapper.querySelectorAll(\n    //   \".bio-char-method_content h3, .bio-char-method_content p\"\n    // ),\n    backdrop = modal.querySelector(\".bio-char-method_modal-backdrop\");\n  modalCloseCircles = modal.querySelectorAll(\n    \".bio-char-method_modal-close svg circle\"\n  );\n\n  gsap.set(imgWrapper, { height: 0 });\n  gsap.set(contentWrapper, { height: 0 });\n  gsap.set(backdrop, { display: \"none\", opacity: 0 });\n  gsap.set(modalCloseCircles, { opacity: 0 });\n  gsap.set(modal, { visibility: \"hidden\", backdropFilter: \"blur(0px)\" });\n\n  // // Split all words on the brand core section\n  // content.forEach((l) => {\n  //   const staggerTextEls = new SplitType(l, {\n  //     types: \"lines\",\n  //     tagName: \"span\",\n  //   });\n\n  //   setLinesWrapper(staggerTextEls.lines, () => {\n  //     gsap.set(staggerTextEls.lines, { yPercent: 100 });\n  //   });\n  // });\n\n  const tl = gsap.timeline({ paused: true });\n\n  tl.set(backdrop, {\n    display: \"block\",\n  })\n    .to(\n      modal,\n      {\n        visibility: \"visible\",\n        backdropFilter: \"blur(24px)\",\n        duration: 0.5,\n        // ease: \"expo.inOut\",\n      },\n      0\n    )\n    .to(\n      backdrop,\n      {\n        opacity: 0.8,\n        duration: 0.5,\n        ease: \"expo.inOut\",\n      },\n      0\n    )\n    .to(\n      imgWrapper,\n      {\n        height: \"auto\",\n        duration: 1,\n        ease: \"expo.inOut\",\n      },\n      0.1\n    )\n    .to(\n      contentWrapper,\n      {\n        height: \"auto\",\n        duration: 1,\n        ease: \"expo.inOut\",\n      },\n      0.2\n    )\n    .to(\n      modalCloseCircles,\n      {\n        opacity: 1,\n        duration: 0.01,\n        stagger: {\n          from: \"random\",\n          each: 0.05,\n        },\n        ease: \"none\",\n      },\n      0.2\n    );\n    // .to(\n    //   contentWrapper.querySelectorAll(\".bio-char-method_content .line\"),\n    //   {\n    //     yPercent: 0,\n    //     // duration: 1,\n    //     stagger: 0.01,\n    //     ease: \"expo.inOut\",\n    //   },\n    //   0.5\n    // );\n  return tl;\n}\n\nasync function openModal(tl) {\n  tl.play();\n}\n\nfunction closeModal(tl) {\n  tl.reverse();\n}\n\ninitMethodsList();"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","$ffdbe7e5c84929bf$var$openModal","tl","play","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1c7845f0e1de0887$export$8f060496e19d4bbb","lines","callback","forEach","line","wrapper","document","createElement","classList","add","parentNode","insertBefore","appendChild","Object","defineProperty","get","set","s","enumerable","configurable","$ffdbe7e5c84929bf$var$initMethodsList","team","querySelectorAll","member","trigger","querySelector","modal","close","$ffdbe7e5c84929bf$var$setModal","imgWrapper","contentWrapper","backdrop","modalCloseCircles","gsap","height","display","opacity","visibility","backdropFilter","timeline","paused","to","duration","ease","stagger","from","each","addEventListener","$ffdbe7e5c84929bf$var$closeModal","reverse","modalCloseCircles1","fromTo"],"version":3,"file":"biophysicalCharacterization_v2.js.map"}