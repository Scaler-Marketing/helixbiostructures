{"mappings":"I,E,E,E,E,E,E,C,E,E,C,E,O,E,C,E,Y,iB,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECAO,SAAS,EAAgB,CAAK,CAAE,CAAQ,EAE7C,EAAM,OAAO,CAAC,AAAA,IACZ,IAAM,EAAU,SAAS,aAAa,CAAC,QACvC,EAAQ,SAAS,CAAC,GAAG,CAAC,gBACtB,EAAK,UAAU,CAAC,YAAY,CAAC,EAAS,GACtC,EAAQ,WAAW,CAAC,EACtB,GAEwB,YAApB,OAAO,GACT,GAEJ,C,O,c,C,E,O,C,kB,C,I,I,E,I,K,E,W,C,E,a,C,C,E,G,E,E,SCVA,SAAS,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MACxB,AC8DK,WACL,IAAM,EAAW,SAAS,gBAAgB,CAAC,mCAM3C,EAAS,OAAO,CAAC,CAAC,EAAS,MACzB,AAtEJ,SAAyB,CAAc,CAAE,CAAK,CAAE,CAAM,EAEpD,IAAM,EAAS,IAAU,EAAS,EAG5B,EAAiB,IAAI,UAAU,EAAe,gBAAgB,CAAC,eAAgB,CACnF,MAAO,EAAS,QAAU,QAC1B,QAAS,MACX,GAEA,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAS,EAAe,KAAK,CAAG,EAAe,KAAK,CAAE,KAChE,EACF,KAAK,GAAG,CAAC,oBAAqB,CAAE,SAAU,GAAI,GAE9C,KAAK,GAAG,CAAC,oBAAqB,CAAE,SAAU,GAAI,EAElD,GAEA,IAAM,EAAQ,EAAS,EAAe,KAAK,CAAG,EAAe,KAAK,CAEhE,KAAK,MAAM,CACT,EACA,CACE,SAAU,GACZ,EACA,CACE,SAAU,EACV,QAAS,GACT,cAAe,CACb,QAAS,EACT,MAAO,CAAA,EACP,MAAO,UACP,IAAK,UAEL,IAAK,CAAA,CACP,CACF,GAGC,GACH,KAAK,MAAM,CACT,EACA,CACE,SAAU,CACZ,EACA,CACE,SAAU,KACV,QAAS,GACT,gBAAiB,CAAA,EACjB,cAAe,CACb,QAAS,EACT,MAAO,CAAA,EACP,MAAO,aACP,IAAK,gBAEL,IAAK,CAAA,CACP,CACF,EAGN,EAUoB,EAAS,EAAG,EAAS,MAAM,CAC7C,EACF,GDvEA","sources":["<anon>","src/modules/setLinesWrapper.js","src/about.js","src/about/introText.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5744\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5744\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2rxJM\", function(module, exports) {\n\n$parcel$export(module.exports, \"setLinesWrapper\", () => $1c7845f0e1de0887$export$8f060496e19d4bbb);\nfunction $1c7845f0e1de0887$export$8f060496e19d4bbb(lines, callback) {\n    // Wrap each line in a .line-wrapper span\n    lines.forEach((line)=>{\n        const wrapper = document.createElement(\"span\");\n        wrapper.classList.add(\"line-wrapper\");\n        line.parentNode.insertBefore(wrapper, line);\n        wrapper.appendChild(line);\n    });\n    if (typeof callback === \"function\") callback();\n}\n\n});\n\n\nvar $2rxJM = parcelRequire(\"2rxJM\");\n// Link timelines to scroll position\nfunction $eaf0ffba354033a7$var$createIntroText(triggerElement, index, amount) {\n    const isFirst = index === 0;\n    const isLast = index === amount - 1;\n    // Split all words on the brand core section\n    const aboutIntroText = new SplitType(triggerElement.querySelectorAll(\".intro-text\"), {\n        types: isLast ? \"words\" : \"lines\",\n        tagName: \"span\"\n    });\n    (0, $2rxJM.setLinesWrapper)(isLast ? aboutIntroText.words : aboutIntroText.lines, ()=>{\n        if (isLast) gsap.set(\".intro-text .word\", {\n            yPercent: 100\n        });\n        else gsap.set(\".intro-text .line\", {\n            yPercent: 100\n        });\n    });\n    const words = isLast ? aboutIntroText.words : aboutIntroText.lines;\n    gsap.fromTo(words, {\n        yPercent: 100\n    }, {\n        yPercent: 0,\n        stagger: 0.1,\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: \"top top\",\n            end: \"30% top\",\n            // markers: true,\n            pin: false\n        }\n    });\n    if (!isLast) gsap.fromTo(words, {\n        yPercent: 0\n    }, {\n        yPercent: -100,\n        stagger: 0.1,\n        immediateRender: false,\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: \"80% bottom\",\n            end: \"bottom bottom\",\n            // markers: true,\n            pin: false\n        }\n    });\n}\nfunction $eaf0ffba354033a7$export$1c0803c11a49f237() {\n    const sections = document.querySelectorAll(\".intro-sequence .sticky-wrapper\");\n    // document\n    //   .querySelector(\".section.home-hero .bg-canvas-el\")\n    //   .classList.add(\"init\");\n    sections.forEach((section, i)=>{\n        $eaf0ffba354033a7$var$createIntroText(section, i, sections.length);\n    });\n}\n\n\ndocument.fonts.ready.then(()=>{\n    (0, $eaf0ffba354033a7$export$1c0803c11a49f237)();\n});\n\n})();\n//# sourceMappingURL=about.js.map\n","export function setLinesWrapper(lines, callback) {\n  // Wrap each line in a .line-wrapper span\n  lines.forEach(line => {\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('line-wrapper');\n    line.parentNode.insertBefore(wrapper, line);\n    wrapper.appendChild(line);\n  });\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n}","import { setAboutIntroText } from \"./about/introText\";\n\ndocument.fonts.ready.then(() => {\n  setAboutIntroText();\n});","import { setLinesWrapper } from \"../modules/setLinesWrapper\";\n\n// Link timelines to scroll position\nfunction createIntroText(triggerElement, index, amount) {\n  const isFirst = index === 0;\n  const isLast = index === amount - 1;\n\n  // Split all words on the brand core section\n  const aboutIntroText = new SplitType(triggerElement.querySelectorAll(\".intro-text\"), {\n    types: isLast ? \"words\" : \"lines\",\n    tagName: \"span\",\n  });\n\n  setLinesWrapper(isLast ? aboutIntroText.words : aboutIntroText.lines, () => {\n    if (isLast) {\n      gsap.set(\".intro-text .word\", { yPercent: 100 });\n    } else {\n      gsap.set(\".intro-text .line\", { yPercent: 100 });\n    }\n  });\n\n  const words = isLast ? aboutIntroText.words : aboutIntroText.lines;\n\n    gsap.fromTo(\n      words,\n      {\n        yPercent: 100,\n      },\n      {\n        yPercent: 0,\n        stagger: 0.1,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"top top\",\n          end: \"30% top\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n\n  if (!isLast) {\n    gsap.fromTo(\n      words,\n      {\n        yPercent: 0,\n      },\n      {\n        yPercent: -100,\n        stagger: 0.1,\n        immediateRender: false,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"80% bottom\",\n          end: \"bottom bottom\",\n          // markers: true,\n          pin: false,\n        },\n      }\n    );\n  }\n}\n\nexport function setAboutIntroText() {\n  const sections = document.querySelectorAll(\".intro-sequence .sticky-wrapper\");\n\n  // document\n  //   .querySelector(\".section.home-hero .bg-canvas-el\")\n  //   .classList.add(\"init\");\n\n  sections.forEach((section, i) => {\n    createIntroText(section, i, sections.length);\n  });\n}\n"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","$2rxJM","globalThis","id","exports","init","module","call","err","Error","code","register","parcelRegister","$1c7845f0e1de0887$export$8f060496e19d4bbb","lines","callback","forEach","line","wrapper","document","createElement","classList","add","parentNode","insertBefore","appendChild","Object","defineProperty","get","set","s","enumerable","configurable","fonts","ready","then","sections","querySelectorAll","section","i","$eaf0ffba354033a7$var$createIntroText","triggerElement","index","amount","isLast","aboutIntroText","SplitType","types","tagName","setLinesWrapper","words","gsap","yPercent","fromTo","stagger","scrollTrigger","trigger","scrub","start","end","pin","immediateRender","length"],"version":3,"file":"about.js.map"}