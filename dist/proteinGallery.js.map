{"mappings":"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","sources":["<anon>","src/proteinGallery.js"],"sourcesContent":["(() => {\nfunction $3f3110c88d6eb540$var$initProteinGallery(store) {\n    const items = document.querySelectorAll(\".protein-gallery_item\");\n    if (!items) return;\n    let currentItemIndex1 = -1;\n    items.forEach((item, i)=>{\n        const trigger = item.querySelector(\".protein-gallery_item-trigger\"), wrapper = item.querySelector(\".protein-gallery_inner-wrapper\"), quantity = item.querySelector(\".protein-purchase_quantity-number\"), plus = item.querySelector(\".protein_purchase-quantity-button.plus\"), minus = item.querySelector(\".protein_purchase-quantity-button.minus\"), name = item.querySelector(\".protein-gallery_item-name\"), addtoPurchaseForm = item.querySelector(\".protein-purchase .button\");\n        gsap.set(wrapper, {\n            height: 0\n        });\n        trigger.addEventListener(\"click\", (e)=>{\n            if (currentItemIndex1 === i) {\n                $3f3110c88d6eb540$var$closeItem(item);\n                currentItemIndex1 = -1;\n            } else {\n                if (currentItemIndex1 !== -1) {\n                    const previousItem = items[currentItemIndex1];\n                    $3f3110c88d6eb540$var$closeItem(previousItem);\n                }\n                $3f3110c88d6eb540$var$openItem(item);\n                currentItemIndex1 = i;\n            }\n        });\n        addtoPurchaseForm.addEventListener(\"click\", ()=>{\n            console.log(name, name.innerText, quantity.value);\n            store.addItem(name.innerText, quantity.value);\n        });\n        plus.addEventListener(\"click\", (e)=>{\n            e.preventDefault();\n            quantity.value = parseFloat(Number(quantity.value) + 0.1).toFixed(1);\n        });\n        minus.addEventListener(\"click\", (e)=>{\n            e.preventDefault();\n            if (Number(quantity.value) > 0) quantity.value = parseFloat(Number(quantity.value) - 0.1).toFixed(1);\n        });\n    });\n}\nfunction $3f3110c88d6eb540$var$openItem(item) {\n    const trigger = item.querySelector(\".protein-gallery_item-trigger\"), circles = trigger.querySelectorAll(\".circle-hide\"), row = item.querySelector(\".protein-gallery_row\"), wrapper = item.querySelector(\".protein-gallery_item-inner-wrapper\");\n    item.classList.add(\"active\");\n    const tl = gsap.timeline();\n    tl.to(row, {\n        opacity: 0,\n        duration: 0.5,\n        ease: \"expo.out\"\n    }, 0);\n    tl.to(circles, {\n        scale: 0,\n        duration: 0.3,\n        ease: \"expo.out\"\n    }, 0);\n    tl.to(wrapper, {\n        visibility: \"visible\",\n        duration: 0\n    }, 0);\n    tl.to(wrapper, {\n        height: \"auto\",\n        opacity: 1,\n        duration: 0.5,\n        ease: \"expo.out\"\n    }, 0);\n}\nfunction $3f3110c88d6eb540$var$closeItem(item, noTransition) {\n    const trigger = item.querySelector(\".protein-gallery_item-trigger\"), circles = trigger.querySelectorAll(\".circle-hide\"), row = item.querySelector(\".protein-gallery_row\"), wrapper = item.querySelector(\".protein-gallery_item-inner-wrapper\");\n    item.classList.remove(\"active\");\n    if (noTransition) {\n        gsap.set(circles, {\n            scale: 1\n        });\n        gsap.set(wrapper, {\n            height: \"0\",\n            opacity: 0,\n            visibility: \"hidden\"\n        });\n        gsap.set(row, {\n            opacity: 1\n        });\n    } else {\n        const tl = gsap.timeline();\n        tl.to(circles, {\n            scale: 1,\n            duration: 0.3,\n            ease: \"expo.out\"\n        }, 0);\n        tl.to(wrapper, {\n            height: \"0\",\n            opacity: 0,\n            duration: 0.5,\n            ease: \"expo.out\"\n        }, 0);\n        tl.to(wrapper, {\n            visibility: \"hidden\",\n            duration: 0\n        }, 0.5);\n        tl.to(row, {\n            opacity: 1,\n            duration: 0.5,\n            ease: \"expo.out\"\n        }, 0);\n    }\n}\nfunction $3f3110c88d6eb540$var$resetProteinGallery() {\n    const active = document.querySelector(\".protein-gallery_item.active\");\n    if (!active) return;\n    $3f3110c88d6eb540$var$closeItem(active, true);\n    currentItemIndex = -1;\n}\ndocument.addEventListener(\"alpine:init\", ()=>{\n    $3f3110c88d6eb540$var$initProteinGallery(Alpine.store(\"purchaseForm\"));\n});\nwindow.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n    \"cmsfilter\",\n    (filterInstances)=>{\n        // console.log(\"cmsfilter Successfully loaded!\");\n        // The callback passes a `filterInstances` array with all the `CMSFilters` instances on the page.\n        const [filterInstance] = filterInstances;\n        // The `renderitems` event runs whenever the list renders items after filtering.\n        filterInstance.listInstance.on(\"renderitems\", (renderedItems)=>{\n            $3f3110c88d6eb540$var$resetProteinGallery();\n        // console.log(renderedItems);\n        });\n    }\n]);\n\n})();\n//# sourceMappingURL=proteinGallery.js.map\n","function initProteinGallery(store) {\n  const items = document.querySelectorAll(\".protein-gallery_item\");\n\n  if (!items) {\n    return;\n  }\n\n  let currentItemIndex = -1;\n\n  items.forEach((item, i) => {\n    const trigger = item.querySelector(\".protein-gallery_item-trigger\"),\n      wrapper = item.querySelector(\".protein-gallery_inner-wrapper\"),\n      quantity = item.querySelector(\".protein-purchase_quantity-number\"),\n      plus = item.querySelector(\".protein_purchase-quantity-button.plus\"),\n      minus = item.querySelector(\".protein_purchase-quantity-button.minus\"),\n      name = item.querySelector(\".protein-gallery_item-name\"),\n      addtoPurchaseForm = item.querySelector(\".protein-purchase .button\");\n\n    gsap.set(wrapper, { height: 0 });\n\n    trigger.addEventListener(\"click\", (e) => {\n      if (currentItemIndex === i) {\n        closeItem(item);\n        currentItemIndex = -1;\n      } else {\n        if (currentItemIndex !== -1) {\n          const previousItem = items[currentItemIndex];\n          closeItem(previousItem);\n        }\n        openItem(item);\n        currentItemIndex = i;\n      }\n    });\n\n    addtoPurchaseForm.addEventListener(\"click\", () => {\n      console.log(name, name.innerText, quantity.value )\n      store.addItem(name.innerText, quantity.value);\n    });\n\n    plus.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      quantity.value = parseFloat(Number(quantity.value) + 0.1).toFixed(1);\n    });\n    minus.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n\n      if (Number(quantity.value) > 0) {\n        quantity.value = parseFloat(Number(quantity.value) - 0.1).toFixed(1);\n\n      }\n    });\n  });\n}\n\nfunction openItem(item) {\n  const trigger = item.querySelector(\".protein-gallery_item-trigger\"),\n    circles = trigger.querySelectorAll(\".circle-hide\"),\n    row = item.querySelector(\".protein-gallery_row\"),\n    wrapper = item.querySelector(\".protein-gallery_item-inner-wrapper\");\n\n  item.classList.add(\"active\");\n\n  const tl = gsap.timeline();\n\n  tl.to(\n    row,\n    {\n      opacity: 0,\n      duration: 0.5,\n      ease: \"expo.out\",\n    },\n    0\n  );\n\n  tl.to(\n    circles,\n    {\n      scale: 0,\n      duration: 0.3,\n      ease: \"expo.out\",\n    },\n    0\n  );\n\n  tl.to(\n    wrapper,\n    {\n      visibility: \"visible\",\n      duration: 0,\n    },\n    0\n  );\n\n  tl.to(\n    wrapper,\n    {\n      height: \"auto\",\n      opacity: 1,\n      duration: 0.5,\n      ease: \"expo.out\",\n    },\n    0\n  );\n}\n\nfunction closeItem(item, noTransition) {\n  const trigger = item.querySelector(\".protein-gallery_item-trigger\"),\n    circles = trigger.querySelectorAll(\".circle-hide\"),\n    row = item.querySelector(\".protein-gallery_row\"),\n    wrapper = item.querySelector(\".protein-gallery_item-inner-wrapper\");\n\n  item.classList.remove(\"active\");\n\n  if (noTransition) {\n    gsap.set(circles, { scale: 1 });\n    gsap.set(wrapper, { height: \"0\", opacity: 0, visibility: \"hidden\" });\n    gsap.set(row, { opacity: 1 });\n  } else {\n    const tl = gsap.timeline();\n\n    tl.to(\n      circles,\n      {\n        scale: 1,\n        duration: 0.3,\n        ease: \"expo.out\",\n      },\n      0\n    );\n\n    tl.to(\n      wrapper,\n      {\n        height: \"0\",\n        opacity: 0,\n        duration: 0.5,\n        ease: \"expo.out\",\n      },\n      0\n    );\n\n    tl.to(\n      wrapper,\n      {\n        visibility: \"hidden\",\n        duration: 0,\n      },\n      0.5\n    );\n\n    tl.to(\n      row,\n      {\n        opacity: 1,\n        duration: 0.5,\n        ease: \"expo.out\",\n      },\n      0\n    );\n  }\n}\n\nfunction resetProteinGallery() {\n  const active = document.querySelector(\".protein-gallery_item.active\");\n\n  if (!active) {\n    return;\n  }\n\n  closeItem(active, true);\n  currentItemIndex = -1;\n}\n\ndocument.addEventListener(\"alpine:init\", () => {\n  initProteinGallery(Alpine.store(\"purchaseForm\"));\n});\n\nwindow.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n  \"cmsfilter\",\n  (filterInstances) => {\n    // console.log(\"cmsfilter Successfully loaded!\");\n\n    // The callback passes a `filterInstances` array with all the `CMSFilters` instances on the page.\n    const [filterInstance] = filterInstances;\n\n    // The `renderitems` event runs whenever the list renders items after filtering.\n    filterInstance.listInstance.on(\"renderitems\", (renderedItems) => {\n      resetProteinGallery();\n      // console.log(renderedItems);\n    });\n  },\n]);\n"],"names":["$3f3110c88d6eb540$var$closeItem","item","noTransition","circles","trigger","querySelector","querySelectorAll","row","wrapper","classList","remove","gsap","set","scale","height","opacity","visibility","tl","timeline","to","duration","ease","document","addEventListener","$3f3110c88d6eb540$var$initProteinGallery","store","items","currentItemIndex1","forEach","i","quantity","plus","minus","name","addtoPurchaseForm","e","$3f3110c88d6eb540$var$openItem","add","console","log","innerText","value","addItem","preventDefault","parseFloat","Number","toFixed","Alpine","window","fsAttributes","push","filterInstances","filterInstance","listInstance","on","renderedItems","$3f3110c88d6eb540$var$resetProteinGallery","active","currentItemIndex"],"version":3,"file":"proteinGallery.js.map"}