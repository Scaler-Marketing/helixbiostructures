{
  "version": 3,
  "file": "scrubImageSequence-mobile.js",
  "sources": ["<anon>", "src/scrubImageSequence.js"],
  "sourcesContent": [
    "(() => {\n// Scrub animation ================================================ //\nconst $c8fe6ad741db8e1e$var$sections = gsap.utils.toArray(\"[scrub-wrapper]\");\nconst $c8fe6ad741db8e1e$var$width = document.documentElement.clientWidth;\nconst $c8fe6ad741db8e1e$var$height = window.innerHeight;\nconst $c8fe6ad741db8e1e$var$mm = gsap.matchMedia();\n// Image sequence play on scroll =====================================//\nlet $c8fe6ad741db8e1e$var$allImagesCount = 0;\nlet $c8fe6ad741db8e1e$var$totalCount = 0;\n// Initialize for each section\nfunction $c8fe6ad741db8e1e$var$initSections() {\n    $c8fe6ad741db8e1e$var$sections.forEach(function(section) {\n        const prefix = section.dataset.prefix || null;\n        const suffix = section.dataset.suffix || null;\n        const frames = section.dataset.framecount || 0;\n        const canvas = section.querySelector(\"canvas\");\n        if (!canvas || !prefix || !suffix || !frames) return;\n        const device = $c8fe6ad741db8e1e$var$width >= 768 ? \"desktop\" : \"mobile\";\n        $c8fe6ad741db8e1e$var$allImagesCount += Number(frames);\n        $c8fe6ad741db8e1e$var$totalCount += Number(frames);\n        $c8fe6ad741db8e1e$var$initCanvas(section, canvas, prefix, suffix, frames, device);\n    });\n}\n$c8fe6ad741db8e1e$var$mm.add(\"(min-width: 768px)\", ()=>{\n    // desktop\n    $c8fe6ad741db8e1e$var$initSections();\n});\n$c8fe6ad741db8e1e$var$mm.add(\"(max-width: 767px)\", ()=>{\n    // mobile\n    $c8fe6ad741db8e1e$var$initSections();\n});\nfunction $c8fe6ad741db8e1e$var$updateImageSequenceCount(file) {\n    $c8fe6ad741db8e1e$var$allImagesCount--;\n    var updatedPercent = 100 - Math.round($c8fe6ad741db8e1e$var$allImagesCount * 100 / $c8fe6ad741db8e1e$var$totalCount);\n    if ($c8fe6ad741db8e1e$var$allImagesCount === 0) setTimeout(function() {\n        lenis.resize();\n    }, 500);\n}\n// Initialize animation on canvas for each section. This loads\n// the image sequence and make sure to load the right image based\n// on scroll position.\nfunction $c8fe6ad741db8e1e$var$initCanvas(section, canvas, prefix, suffix, frames, device) {\n    var context = canvas.getContext(\"2d\");\n    canvas.width = $c8fe6ad741db8e1e$var$width;\n    canvas.height = $c8fe6ad741db8e1e$var$height;\n    var frameCount = frames;\n    var currentFrame = function(index) {\n        return `${prefix}${device}/${(index + 1).toString().padStart(3, \"0\")}${suffix}`;\n    };\n    var images = [];\n    // loads all images for this sequence and checks if we loaded everything\n    // for this page.\n    for(var i = 0; i < frameCount; i++){\n        var img = new Image();\n        var imgSrc = currentFrame(i);\n        img.onload = function() {\n            $c8fe6ad741db8e1e$var$updateImageSequenceCount(imgSrc);\n            // console.log(allImagesCount, imgSrc, i);\n            // if (allImagesCount === 0) {\n            if ($c8fe6ad741db8e1e$var$allImagesCount === $c8fe6ad741db8e1e$var$totalCount - 1) $c8fe6ad741db8e1e$var$initCanvasAnimations(section, images, context, canvas);\n        };\n        img.onerror = function() {\n            $c8fe6ad741db8e1e$var$updateImageSequenceCount(imgSrc);\n        };\n        img.src = imgSrc;\n        images.push(img);\n    }\n}\nfunction $c8fe6ad741db8e1e$var$initCanvasAnimations(section, images, context, canvas) {\n    var sequence = {\n        frame: 0\n    };\n    var blocks = section.querySelectorAll(\"[frames-play]\");\n    blocks.forEach(function(block) {\n        var start = Number(block.dataset.start), end = Number(block.dataset.end), posStart = block.dataset.startPos || \"top top\", posEnd = block.dataset.endPos || \"bottom bottom\";\n        var blockSequence = {\n            frame: 0\n        };\n        // Initializes timeline for scroll animation.\n        gsap.timeline({\n            onUpdate: function() {\n                $c8fe6ad741db8e1e$var$render(images, blockSequence, context, canvas);\n            },\n            scrollTrigger: {\n                trigger: block,\n                pin: false,\n                scrub: 1,\n                start: posStart,\n                end: posEnd,\n                markers: false\n            }\n        }).fromTo(blockSequence, {\n            frame: start - 1\n        }, {\n            frame: end - 1,\n            snap: \"frame\",\n            ease: \"none\",\n            duration: 1\n        }, 0);\n    });\n    $c8fe6ad741db8e1e$var$render(images, sequence, context, canvas);\n    window.addEventListener(\"resize\", function() {\n        canvas.width = document.documentElement.clientWidth;\n        canvas.height = window.innerHeight;\n        $c8fe6ad741db8e1e$var$render(images, sequence, context, canvas);\n    });\n}\n// Makes sure that the canvas is responsive, and updates the current\n// painted image depending on the scroll position.\nfunction $c8fe6ad741db8e1e$var$render(images, sequence, context, canvas) {\n    var img = images[sequence.frame];\n    // console.log(sequence.frame);\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    var loadedImageWidth = img.width;\n    var loadedImageHeight = img.height;\n    // get the scale\n    // it is the min of the 2 ratios\n    var scaleFactor = Math.max(canvas.width / img.width, canvas.height / img.height);\n    // Finding the new width and height based on the scale factor\n    var newWidth = img.width * scaleFactor;\n    var newHeight = img.height * scaleFactor;\n    //console.log(img.width, img.height, scaleFactor, newWidth, newHeight);\n    // get the top left position of the image\n    // in order to center the image within the canvas\n    var x = canvas.width / 2 - newWidth / 2;\n    var y = canvas.height / 2 - newHeight / 2;\n    // When drawing the image, we have to scale down the image\n    // width and height in order to fit within the canvas\n    context.drawImage(img, x, y, newWidth, newHeight);\n}\n\n})();\n//# sourceMappingURL=scrubImageSequence-mobile.js.map"
  ],
  "mappings": "A,C,KCCA,IAAM,EAAW,KAAK,KAAK,CAAC,OAAO,CAAC,mBAC9B,EAAQ,SAAS,eAAe,CAAC,WAAW,CAC5C,EAAS,OAAO,WAAW,CAE3B,EAAK,KAAK,UAAU,GAItB,EAAiB,EACjB,EAAa,EAGjB,SAAS,IACP,EAAS,OAAO,CAAC,SAAU,CAAO,EA